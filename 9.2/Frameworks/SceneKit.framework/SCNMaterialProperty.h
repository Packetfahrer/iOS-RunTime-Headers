/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNMaterialProperty : NSObject <NSSecureCoding, SCNAnimatable> {
    SCNOrderedDictionary * _animations;
    UIColor * _borderColor;
    struct __C3DImage { } * _c3dImage;
    struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; } * _contentTransform;
    unsigned char  _contentType;
    id  _contents;
    struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; void *x3; union { struct __C3DImage {} *x_4_1_1; void *x_4_1_2; struct __C3DImageProxy {} *x_4_1_3; struct __C3DTexture {} *x_4_1_4; } x4; unsigned int x5 : 8; unsigned int x6 : 1; long x7; struct __C3DTextureSampler {} *x8; struct __C3DTransforms {} *x9; float x10; int x11; void *x12; } * _customSlot;
    NSString * _customSlotName;
    float  _intensity;
    unsigned int  _isCommonProfileProperty;
    unsigned int  _isPresentationInstance;
    int  _magnificationFilter;
    int  _mappingChannel;
    float  _maxAnisotropy;
    int  _minificationFilter;
    int  _mipFilter;
    id  _parent;
    long  _propertyType;
    struct __C3DTextureProxy { } * _textureProxy;
    int  _wrapS;
    int  _wrapT;
}

@property (readonly) NSArray *animationKeys;
@property (nonatomic, retain) id borderColor;
@property (nonatomic, retain) id contents;
@property (nonatomic) struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; } contentsTransform;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic) float intensity;
@property (nonatomic) int magnificationFilter;
@property (nonatomic) int mappingChannel;
@property (nonatomic) float maxAnisotropy;
@property (nonatomic) int minificationFilter;
@property (nonatomic) int mipFilter;
@property (readonly) Class superclass;
@property (nonatomic) int wrapS;
@property (nonatomic) int wrapT;

+ (struct __C3DImage { }*)_copyC3DImageFromImageData:(id)arg1 typeID:(unsigned long)arg2;
+ (id)_copyImageFromC3DImage:(struct __C3DImage { }*)arg1;
+ (struct __C3DImage { }*)copyC3DImageFromImage:(id)arg1;
+ (struct __C3DImage { }*)copyC3DImageFromImage:(id)arg1 autoCubemap:(BOOL)arg2;
+ (id)copyImageFromC3DImage:(struct __C3DImage { }*)arg1;
+ (id)materialPropertyWithContents:(id)arg1;
+ (BOOL)supportsSecureCoding;

- (id)UIView;
- (void*)__CFObject;
- (void)__allocateContentTransformIfNeeded;
- (void)__removeAnimation:(id)arg1 forKey:(id)arg2;
- (id)_animationPathForKey:(id)arg1;
- (void)_clearContents;
- (void)_customDecodingOfSCNMaterialProperty:(id)arg1;
- (void)_customEncodingOfSCNMaterialProperty:(id)arg1;
- (void)_didDecodeSCNMaterialProperty:(id)arg1;
- (void)_layerDidChange:(id)arg1;
- (void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2;
- (int)_presentationMappingChannel;
- (void)_setC3DImageRef:(struct __C3DImage { }*)arg1;
- (void)_setColor:(id)arg1;
- (void)_setParent:(id)arg1;
- (BOOL)_supportsCubeMaps;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (void)_updateMaterialAttachment:(id)arg1;
- (void)_updateMaterialBorderColor:(id)arg1;
- (void)_updateMaterialColor:(id)arg1;
- (void)_updateMaterialFilters;
- (void)_updateMaterialImage:(id)arg1;
- (void)_updateMaterialLayer:(id)arg1;
- (void)_updateMaterialMTLTexture:(id)arg1;
- (void)_updateMaterialProceduralContents:(id)arg1;
- (void)_updateMaterialPropertyTransform:(union C3DMatrix4x4 { float x1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x2[4]; void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; SEL x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; unsigned short x29; void*x30; short x31; void*x32; void*x33; void*x34; void*x35; unsigned long x36; int x37; unsigned int x38/* : ? */; const void*x39; const void*x40; void*x41; void*x42; const int x43; void x44; void*x45; void*x46; void*x47; void*x48; const void*x49; void*x50; void*x51; void*x52; out const void*x53; short x54; void*x55; unsigned char x56; void*x57; long x58; void*x59; in double x60; void*x61; const void*x62; unsigned int x63; void*x64; int x65; void*x66; void*x67; float x68; const void*x69; void*x70; void*x71; void*x72; out const void*x73; void*x74; unsigned char x75; void*x76; long x77; void*x78; in double x79; void*x80; const void*x81; unsigned int x82; void*x83; int x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; out void*x104; void*x105; void*x106; in void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; SEL x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; SEL x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; unsigned short x158; void*x159; short x160; void*x161; void*x162; void*x163; void*x164; unsigned long x165; int x166; unsigned int x167/* : ? */; const void*x168; const void*x169; void*x170; void*x171; const int x172; void x173; void*x174; void*x175; void*x176; void*x177; const void*x178; void*x179; void*x180; void*x181; out const void*x182; short x183; void*x184; unsigned int x185; void*x186; void*x187; unsigned char x188; out const void*x189; void*x190; float x191; const void*x192; void*x193; void*x194; void*x195; out const void*x196; void*x197; unsigned int x198; void*x199; void*x200; unsigned char x201; out const void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; SEL x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; SEL x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; const void*x279; void*x280; void*x281; const void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; const void*x292; void*x293; void*x294; const void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; SEL x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; unsigned long x331; unsigned short x332; void*x333; const void*x334; BOOL x335; void*x336; void*x337; void*x338; void*x339; unsigned int x340/* : ? */; void*x341; const unsigned int x342; in void*x343; void*x344; const in void*x345; long x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; const void*x369; unsigned short x370; void*x371; long doublex372; void*x373; unsigned char x374; out const void*x375; long doublex376; void*x377; void*x378; void*x379; unsigned short x380; void*x381; out const void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; const void*x396; unsigned long long x397; void*x398; void*x399; unsigned long x400; unsigned short x401; void*x402; const void*x403; BOOL x404; void*x405; void*x406; void*x407; void*x408; unsigned int x409/* : ? */; void*x410; const void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; const void*x425; bycopy void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; const unsigned char x434; out void*x435; void*x436; long x437; int x438; BOOL x439; void*x440; void*x441; int x442; out in long doublex443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; const void*x467; unsigned long x468; void*x469; void*x470; double x471; int x472; out const void*x473; void*x474; out const void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; const void*x493; void*x494; void*x495; void*x496; bycopy void*x497; long doublex498; void*x499; const void*x500; in short x501; int x502; void*x503; unsigned int x504; in BOOL x505; int x506; double x507; void*x508; in void*x509; void*x510; int x511; long x512; void*x513; void*x514; const void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; const void*x534; void*x535; void*x536; unsigned short x537; void*x538; void*x539; void*x540; void*x541; short x542; void*x543; const int x544; BOOL x545; void*x546; int x547; out in short x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; const void*x561; void*x562; void*x563; unsigned short x564; long doublex565; void*x566; void*x567; void*x568; void*x569; unsigned short x570; out void*x571; const BOOL x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; const void*x590; unsigned char x591; void*x592; void*x593; unsigned int x594; void*x595; void*x596; float x597; long x598; void*x599; BOOL x600; void*x601; int x602; in void*x603; oneway int x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; const void*x619; void*x620; inout unsigned char x621; out in void*x622; void*x623; BOOL x624; void*x625; oneway unsigned char x626; void*x627; const double x628; void*x629; const int x630; void*x631; int x632; in void*x633; double x634; void*x635; void*x636; void*x637; void*x638; const void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; const void*x656; void*x657; void*x658; bycopy void*x659; void*x660; void*x661; void*x662; void*x663; long x664; void*x665; void x666; void*x667; in void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; const void*x685; void*x686; void*x687; void*x688; void*x689; long x690; void*x691; BOOL x692; void*x693; void*x694; void*x695; const void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; const void*x715; SEL x716; void*x717; void*x718; long x719; long doublex720; void*x721; unsigned char x722; void*x723; long x724; void*x725; in double x726; void*x727; const unsigned short x728; void*x729; const void x730; void*x731; const bycopy const void*x732; void*x733; in int x734; void*x735; void*x736; const unsigned int x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; const void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; double x760; void*x761; const void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; const void*x783; void*x784; void*x785; void*x786; unsigned char x787; void*x788; void*x789; void*x790; void*x791; unsigned int x792; in void*x793; void*x794; const float x795; void*x796; BOOL x797; void*x798; unsigned long x799; int x800; short x801; void*x802; void*x803; in void*x804; const void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; const void*x826; void*x827; void*x828; unsigned int x829; long doublex830; unsigned int x831; inout void*x832; void*x833; void*x834; out const void*x835; unsigned short x836; void*x837; short x838; short x839; int x840; out in void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; const void*x852; void*x853; void*x854; unsigned char x855; long doublex856; void*x857; unsigned short x858; int x859; void*x860; void*x861; long x862; void*x863; void*x864; out double x865; void*x866; long x867; void*x868; void*x869; const void*x870; void*x871; void*x872; void*x873; void*x874; const void*x875; void*x876; in void*x877; void*x878; void*x879; const void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; const void*x894; void*x895; void*x896; unsigned short x897; BOOL x898; BOOL x899; out void*x900; in void*x901; unsigned short x902; void*x903; out const void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; const void*x920; void*x921; void*x922; unsigned long x923; void*x924; void*x925; long x926; long x927; void*x928; void*x929; void*x930; void*x931; const short x932; short x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; const void*x949; })arg1;
- (void)_updateMaterialSKScene:(id)arg1;
- (void)_updateMaterialSKTexture:(id)arg1;
- (void)_updateMaterialUIComponent:(id)arg1;
- (void)addAnimation:(id)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (id)animationForKey:(id)arg1;
- (id)animationKeys;
- (struct __C3DAnimationManager { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __C3DModelValueStorage {} *x2; struct __CFDictionary {} *x3; struct __CFDictionary {} *x4; struct __CFSet {} *x5; struct __CFArray {} *x6; bool x7; bool x8; bool x9; struct _C3DAnimationPendingEvent {} *x10; struct __C3DAllocator {} *x11; struct __CFDictionary {} *x12; struct __CFArray {} *x13; double x14; double x15; double x16; struct _opaque_pthread_mutex_t { long x_17_1_1; BOOL x_17_1_2[40]; } x17; int x18; int x19; int x20; int x21; }*)animationManager;
- (id)attachment;
- (id)borderColor;
- (struct C3DColor4 { union { float x_1_1_1[4]; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_1_1_2; } x1; })borderColor4;
- (id)color;
- (struct C3DColor4 { union { float x_1_1_1[4]; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_1_1_2; } x1; })color4;
- (struct __C3DEffectCommonProfile { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __C3DMaterial {} *x2; long x3; struct __C3DEffectSlot {} *x4; struct __C3DEffectSlot {} *x5; struct __C3DEffectSlot {} *x6; struct __C3DEffectSlot {} *x7; struct __C3DEffectSlot {} *x8; struct __C3DEffectSlot {} *x9; struct __C3DEffectSlot {} *x10; struct __C3DEffectSlot {} *x11; struct __C3DEffectSlot {} *x12; struct __C3DEffectSlot {} *x13; float x14; float x15; float x16; float x17; BOOL x18; int x19; bool x20; bool x21; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 11; }*)commonProfile;
- (id)content;
- (id)contents;
- (struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })contentsTransform;
- (struct __C3DAnimationChannel { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __C3DAnimation {} *x2; struct __CFArray {} *x3; void *x4; struct __C3DModelTarget {} *x5; struct __CFString {} *x6; }*)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2;
- (void)copyPropertiesFrom:(id)arg1;
- (void)dealloc;
- (id)description;
- (struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; void *x3; union { struct __C3DImage {} *x_4_1_1; void *x_4_1_2; struct __C3DImageProxy {} *x_4_1_3; struct __C3DTexture {} *x_4_1_4; } x4; unsigned int x5 : 8; unsigned int x6 : 1; long x7; struct __C3DTextureSampler {} *x8; struct __C3DTransforms {} *x9; float x10; int x11; void *x12; }*)effectSlot;
- (struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; void *x3; union { struct __C3DImage {} *x_4_1_1; void *x_4_1_2; struct __C3DImageProxy {} *x_4_1_3; struct __C3DTexture {} *x_4_1_4; } x4; unsigned int x5 : 8; unsigned int x6 : 1; long x7; struct __C3DTextureSampler {} *x8; struct __C3DTransforms {} *x9; float x10; int x11; void *x12; }*)effectSlotCreateIfNeeded:(BOOL)arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct __C3DImage { }*)getC3DImageRef;
- (id)image;
- (id)init;
- (id)initPresentationMaterialPropertyWithModelProperty:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithParent:(id)arg1 andCustomName:(id)arg2;
- (id)initWithParent:(id)arg1 propertyType:(long)arg2;
- (float)intensity;
- (BOOL)isAnimationForKeyPaused:(id)arg1;
- (BOOL)isPausedOrPausedByInheritance;
- (id)layer;
- (void)linkCustomPropertyWithParent:(id)arg1 andCustomName:(id)arg2;
- (int)magnificationFilter;
- (int)mappingChannel;
- (float)maxAnisotropy;
- (int)minificationFilter;
- (int)mipFilter;
- (id)mtlTexture;
- (id)parent;
- (void)parentWillDie:(id)arg1;
- (void)pauseAnimationForKey:(id)arg1;
- (id)presentationInstance;
- (id)presentationMaterialProperty;
- (id)proceduralContents;
- (long)propertyType;
- (id)pvrtcData;
- (void)removeAllAnimations;
- (void)removeAnimationForKey:(id)arg1;
- (void)removeAnimationForKey:(id)arg1 fadeOutDuration:(float)arg2;
- (void)resumeAnimationForKey:(id)arg1;
- (struct __C3DScene { }*)sceneRef;
- (void)setAttachment:(id)arg1;
- (void)setBorderColor:(id)arg1;
- (void)setColor:(id)arg1;
- (void)setContent:(id)arg1;
- (void)setContents:(id)arg1;
- (void)setContentsTransform:(struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1;
- (void)setImage:(id)arg1;
- (void)setIntensity:(float)arg1;
- (void)setLayer:(id)arg1;
- (void)setMagnificationFilter:(int)arg1;
- (void)setMappingChannel:(int)arg1;
- (void)setMaxAnisotropy:(float)arg1;
- (void)setMinificationFilter:(int)arg1;
- (void)setMipFilter:(int)arg1;
- (void)setMtlTexture:(id)arg1;
- (void)setProceduralContents:(id)arg1;
- (void)setSkScene:(id)arg1;
- (void)setSkTexture:(id)arg1;
- (void)setUIView:(id)arg1;
- (void)setUIWindow:(id)arg1;
- (void)setWrapS:(int)arg1;
- (void)setWrapT:(int)arg1;
- (id)skScene;
- (id)skTexture;
- (id)slotName;
- (struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; long x2; long x3; long x4; long x5; long x6; long x7; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_8_1_1; } x8; float x9; unsigned char x10; long x11; unsigned int x12; }*)textureSampler;
- (void)unlinkCustomPropertyWithParent:(id)arg1;
- (int)wrapS;
- (int)wrapT;

@end
