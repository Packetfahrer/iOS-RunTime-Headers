/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNRenderContextMetal : SCNRenderContextImp <SCNBufferStream> {
    struct __C3DFXMetalProgram { struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_3_1; unsigned char x_1_3_2[4]; } x_1_2_1; void *x_1_2_2; struct __CFString {} *x_1_2_3; struct __CFString {} *x_1_2_4; struct __CFDictionary {} *x_1_2_5; int x_1_2_6; int x_1_2_7; } x_1_1_1; int x_1_1_2; unsigned int x_1_1_3 : 1; unsigned int x_1_1_4 : 1; struct __C3DFXProgramDelegate {} *x_1_1_5; } x1; struct __CFString {} *x2[2]; struct __CFString {} *x3; struct __CFDictionary {} *x4; struct __CFDictionary {} *x5; } * _background2DProgram;
    struct __C3DFXMetalProgram { struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_3_1; unsigned char x_1_3_2[4]; } x_1_2_1; void *x_1_2_2; struct __CFString {} *x_1_2_3; struct __CFString {} *x_1_2_4; struct __CFDictionary {} *x_1_2_5; int x_1_2_6; int x_1_2_7; } x_1_1_1; int x_1_1_2; unsigned int x_1_1_3 : 1; unsigned int x_1_1_4 : 1; struct __C3DFXProgramDelegate {} *x_1_1_5; } x1; struct __CFString {} *x2[2]; struct __CFString {} *x3; struct __CFDictionary {} *x4; struct __CFDictionary {} *x5; } * _backgroundCubeProgram;
    NSMutableArray * _bufferPool;
    struct { 
        struct __C3DRasterizerStates {} *rasterizerStates; 
        struct __C3DMesh {} *mesh; 
        SCNMetalMesh *metalMesh; 
        struct __C3DMeshElement {} *meshElement; 
        SCNMetalMeshElement *metalMeshElement; 
        struct __C3DFXProgram {} *program; 
        struct __C3DMaterial {} *material; 
        struct __C3DGeometry {} *geometry; 
        SCNMetalShadable *metalShadable; 
        struct __C3DEffectCommonProfile {} *commonProfile; 
        struct __C3DBlendStates {} *blendStates; 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void*blendColor; 
    }  _cache;
    <MTLCommandBuffer> * _clientCommandBuffer;
    <MTLRenderCommandEncoder> * _clientRenderCommandEncoder;
    MTLRenderPassDescriptor * _clientRenderPassDescriptor;
    <MTLCommandQueue> * _commandQueue;
    <MTLCommandBuffer> * _currentCommandBuffer;
    struct __C3DFXPass { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __CFString {} *x2; int x3; bool x4; struct __C3DFXTechnique {} *x5; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFString {} *x8; bool x9; struct __C3DFXProgram {} *x10; struct __C3DMaterial {} *x11; struct __C3DBlendStates {} *x12; struct __C3DRasterizerStates {} *x13; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_14_1_1; } x14; unsigned char x15; unsigned int x16; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; unsigned int x38 : 1; unsigned int x39 : 1; struct __C3DRendererElement {} *x40; unsigned long x41; unsigned long x42; struct { int (*x_43_1_1)(); int (*x_43_1_2)(); int (*x_43_1_3)(); int (*x_43_1_4)(); int (*x_43_1_5)(); int (*x_43_1_6)(); int (*x_43_1_7)(); int (*x_43_1_8)(); void *x_43_1_9; } x43; struct { struct { unsigned char x_1_2_1; unsigned char x_1_2_2; unsigned int x_1_2_3 : 1; unsigned int x_1_2_4 : 1; unsigned int x_1_2_5 : 1; unsigned int x_1_2_6 : 1; unsigned char x_1_2_7[1]; } x_44_1_1; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned int x_2_2_3 : 1; unsigned int x_2_2_4 : 1; unsigned int x_2_2_5 : 1; unsigned int x_2_2_6 : 1; unsigned char x_2_2_7[1]; } x_44_1_2; unsigned int x_44_1_3 : 1; unsigned int x_44_1_4 : 1; } x44; struct CGPoint { float x_45_1_1; float x_45_1_2; } x45; struct { /* ? */ } *x46; unsigned int x47; struct __C3DNode {} *x48; struct __C3DNode {} *x49; struct __CFArray {} *x50; struct __C3DNode {} *x51; struct __CFString {} *x52; struct __CFString {} *x53; struct __CFString {} *x54; void *x55; struct __C3DFXPassInput {} **x56; int x57; int x58; struct __CFDictionary {} *x59; struct __CFDictionary {} *x60; struct { unsigned int x_61_1_1 : 1; bool x_61_1_2; unsigned char x_61_1_3; } x61; } * _currentPass;
    BOOL  _currentPassIsMirrored;
    <MTLRenderCommandEncoder> * _currentRenderEncoder;
    MTLRenderPassDescriptor * _currentRenderPassDescriptor;
    SCNMetalShaderManager * _currentShaderManager;
    struct { 
        BOOL vertexIndex; 
        BOOL fragmentIndex; 
    }  _currentStreamBufferIndices;
    <MTLDepthStencilState> * _defaultDepthStencilState;
    <MTLSamplerState> * _defaultSamplerState;
    <MTLDevice> * _device;
    <CAMetalDrawable> * _drawable;
    struct __C3DEngineContext { } * _engineContext;
    unsigned long  _features;
    <MTLBuffer> * _frameConstantBuffer;
    unsigned int  _frameConstantBufferIndex;
    unsigned int  _frameConstantBufferOffset;
    NSMutableArray * _frameConstantBuffers;
    struct SCNSceneBuffer { 
        struct float4x4 { 
            /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
        } viewTransform; 
        struct float4x4 { 
            void*columns[4]; 
        } projectionTransform; 
        struct float4x4 { 
            void*columns[4]; 
        } viewToCubeTransform; 
    }  _frameUniforms;
    NSMutableArray * _freeVolatileMeshElements;
    NSObject<OS_dispatch_semaphore> * _inFlightSemaphore;
    double  _initialTime;
    CAMetalLayer * _layerTarget;
    struct { 
        struct unordered_map<unsigned long long, SCNMTLLightSetData, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCNMTLLightSetData> > > { 
            struct __hash_table<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData> > > { 
                struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> > > { 
                    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> > > { 
                        struct __hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> {} **__first_; 
                        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> > { 
                            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> > { 
                                unsigned long __first_; 
                            } __data_; 
                        } __second_; 
                    } __ptr_; 
                } __bucket_list_; 
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> > > { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> { 
                        struct __hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> {} *__next_; 
                    } __first_; 
                } __p1_; 
                struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, std::__1::hash<unsigned long long>, true> > { 
                    unsigned long __first_; 
                } __p2_; 
                struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, std::__1::equal_to<unsigned long long>, true> > { 
                    float __first_; 
                } __p3_; 
            } __table_; 
        } frameLightingSetDatas; 
        struct { 
            <MTLBuffer> *buffer; 
            unsigned int offset; 
            unsigned int size; 
            <MTLTexture> *textures[8]; 
            <MTLSamplerState> *samplers[8]; 
        } currentLightingSetData; 
    }  _lighting;
    unsigned int  _maxFrameConstantBufferIndex;
    struct { 
        struct float4x4 { 
            /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
        } modelTransform; 
        struct float4x4 { 
            void*columns[4]; 
        } modelViewTransform; 
        struct float2x3 { 
            void*columns[2]; 
        } boundingBox; 
        struct __C3DNode {} *instanceNode; 
        unsigned int flags; 
        unsigned int *probeCacheIndex; 
    }  _nodeUniforms;
    struct { 
        struct __C3DFXPassInstance {} *passInstance; 
        struct __C3DLightingSystem {} *lightingSystem; 
        struct __C3DDynamicBatchingSystem {} *dynamicBatchingSystem; 
        struct __C3DFXPass {} *pass; 
        BOOL passRequiresLighting; 
    }  _processingContext;
    long  _profile;
    void _renderSize;
    struct { 
        <MTLTexture> *currentColor; 
        <MTLTexture> *currentDepth; 
        <MTLTexture> *currentStencil; 
        <MTLTexture> *mainColor; 
        <MTLTexture> *mainDepth; 
        <MTLTexture> *outputColor; 
        <MTLTexture> *outputDepth; 
    }  _renderTargets;
    SCNMetalResourceManager * _resourceManager;
    struct { 
        <MTLBuffer> *buffer; 
        unsigned int offset; 
        unsigned int size; 
    }  _sceneUniforms;
    unsigned int  _seed;
    <MTLBuffer> * _shadowKernelBuffer;
    BOOL  _showsAuthoringEnvironment;
    double  _startTimeFlush;
    int  _startTimeFlushIndex;
    <MTLTexture> * _textureTarget;
    NSMutableArray * _usedVolatileMeshElements;
    <MTLBuffer> * _vertexVolatileBuffer;
    unsigned int  _vertexVolatileBufferIndex;
    unsigned int  _vertexVolatileBufferOffset;
    NSMutableArray * _vertexVolatileBuffers;
    NSMutableArray * _volatileMeshes;
}

@property (nonatomic, retain) <MTLCommandBuffer> *clientCommandBuffer;
@property (nonatomic, retain) <MTLRenderCommandEncoder> *clientRenderCommandEncoder;
@property (nonatomic, retain) MTLRenderPassDescriptor *clientRenderPassDescriptor;
@property (nonatomic, retain) <MTLCommandQueue> *commandQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <MTLDevice> *device;
@property (readonly) unsigned int hash;
@property (readonly) Class superclass;

+ (void)registerBindings;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)__C3DFXContextDidApplyPass:(struct __C3DFXPass { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __CFString {} *x2; int x3; bool x4; struct __C3DFXTechnique {} *x5; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFString {} *x8; bool x9; struct __C3DFXProgram {} *x10; struct __C3DMaterial {} *x11; struct __C3DBlendStates {} *x12; struct __C3DRasterizerStates {} *x13; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_14_1_1; } x14; unsigned char x15; unsigned int x16; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; unsigned int x38 : 1; unsigned int x39 : 1; struct __C3DRendererElement {} *x40; unsigned long x41; unsigned long x42; struct { int (*x_43_1_1)(); int (*x_43_1_2)(); int (*x_43_1_3)(); int (*x_43_1_4)(); int (*x_43_1_5)(); int (*x_43_1_6)(); int (*x_43_1_7)(); int (*x_43_1_8)(); void *x_43_1_9; } x43; struct { struct { unsigned char x_1_2_1; unsigned char x_1_2_2; unsigned int x_1_2_3 : 1; unsigned int x_1_2_4 : 1; unsigned int x_1_2_5 : 1; unsigned int x_1_2_6 : 1; unsigned char x_1_2_7[1]; } x_44_1_1; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned int x_2_2_3 : 1; unsigned int x_2_2_4 : 1; unsigned int x_2_2_5 : 1; unsigned int x_2_2_6 : 1; unsigned char x_2_2_7[1]; } x_44_1_2; unsigned int x_44_1_3 : 1; unsigned int x_44_1_4 : 1; } x44; struct CGPoint { float x_45_1_1; float x_45_1_2; } x45; struct { /* ? */ } *x46; unsigned int x47; struct __C3DNode {} *x48; struct __C3DNode {} *x49; struct __CFArray {} *x50; struct __C3DNode {} *x51; struct __CFString {} *x52; struct __CFString {} *x53; struct __CFString {} *x54; void *x55; struct __C3DFXPassInput {} **x56; int x57; int x58; struct __CFDictionary {} *x59; struct __CFDictionary {} *x60; struct { unsigned int x_61_1_1 : 1; bool x_61_1_2; unsigned char x_61_1_3; } x61; }*)arg1;
- (id)__reserveVolatileBufferForSize:(unsigned long)arg1 offset:(unsigned int*)arg2;
- (char *)_allocateConstantBufferSize:(int)arg1 buffer:(id*)arg2 offset:(unsigned int*)arg3;
- (void)_clearRenderCommanderEncoderCache;
- (void)_clearUnusedBindingPoints;
- (void)_drawMeshElement:(id)arg1 instanceCount:(unsigned int)arg2;
- (void)_execute:(struct { struct __C3DFXProgram {} *x1; struct __C3DMaterial {} *x2; struct __C3DGeometry {} *x3; struct __C3DNode {} *x4; struct __C3DMesh {} *x5; struct __C3DMeshElement {} *x6; struct __C3DFXPass {} *x7; unsigned int *x8; bool x9; bool x10; })arg1;
- (id)_finalRenderTexture;
- (void)_logLightingInformation;
- (id)_newMTLBufferFromPoolWithLength:(unsigned int)arg1;
- (void)_purgeUnusedContantBuffers;
- (void)_recycleMTLBufferToPool:(id)arg1;
- (id)_renderTargetWithDescription:(void *)arg1 size:(void *)arg2 name:(void *)arg3 useCount:(void *)arg4; // needs 4 arg types, found 3: struct { unsigned char x1; unsigned char x2; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned char x7[1]; }, id, int
- (void)_setBuffer:(id)arg1 offset:(unsigned int)arg2 atIndices:(struct { BOOL x1; BOOL x2; })arg3;
- (void)_setConstantBufferBytes:(void*)arg1 size:(int)arg2 atIndices:(struct { BOOL x1; BOOL x2; })arg3;
- (void)_setFragmentBuffer:(id)arg1 offset:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)_setFragmentTexture:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_setMeshBuffers:(id)arg1;
- (void)_setSamplerState:(id)arg1 atIndices:(struct { BOOL x1; BOOL x2; })arg2;
- (void)_setTexture:(id)arg1 atIndices:(struct { BOOL x1; BOOL x2; })arg2;
- (void)_setVertexBuffer:(id)arg1 offset:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)_setVertexBuffers:(const id*)arg1 offsets:(const unsigned int*)arg2 withRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg3;
- (void)_setVertexTexture:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_setZeroConstantBufferOfSize:(unsigned int)arg1 atIndices:(struct { BOOL x1; BOOL x2; })arg2;
- (BOOL)_setupDescriptor:(id)arg1 forPass:(struct __C3DFXPass { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __CFString {} *x2; int x3; bool x4; struct __C3DFXTechnique {} *x5; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFString {} *x8; bool x9; struct __C3DFXProgram {} *x10; struct __C3DMaterial {} *x11; struct __C3DBlendStates {} *x12; struct __C3DRasterizerStates {} *x13; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_14_1_1; } x14; unsigned char x15; unsigned int x16; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; unsigned int x38 : 1; unsigned int x39 : 1; struct __C3DRendererElement {} *x40; unsigned long x41; unsigned long x42; struct { int (*x_43_1_1)(); int (*x_43_1_2)(); int (*x_43_1_3)(); int (*x_43_1_4)(); int (*x_43_1_5)(); int (*x_43_1_6)(); int (*x_43_1_7)(); int (*x_43_1_8)(); void *x_43_1_9; } x43; struct { struct { unsigned char x_1_2_1; unsigned char x_1_2_2; unsigned int x_1_2_3 : 1; unsigned int x_1_2_4 : 1; unsigned int x_1_2_5 : 1; unsigned int x_1_2_6 : 1; unsigned char x_1_2_7[1]; } x_44_1_1; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned int x_2_2_3 : 1; unsigned int x_2_2_4 : 1; unsigned int x_2_2_5 : 1; unsigned int x_2_2_6 : 1; unsigned char x_2_2_7[1]; } x_44_1_2; unsigned int x_44_1_3 : 1; unsigned int x_44_1_4 : 1; } x44; struct CGPoint { float x_45_1_1; float x_45_1_2; } x45; struct { /* ? */ } *x46; unsigned int x47; struct __C3DNode {} *x48; struct __C3DNode {} *x49; struct __CFArray {} *x50; struct __C3DNode {} *x51; struct __CFString {} *x52; struct __CFString {} *x53; struct __CFString {} *x54; void *x55; struct __C3DFXPassInput {} **x56; int x57; int x58; struct __CFDictionary {} *x59; struct __CFDictionary {} *x60; struct { unsigned int x_61_1_1 : 1; bool x_61_1_2; unsigned char x_61_1_3; } x61; }*)arg2 isFinalTechnique:(BOOL)arg3;
- (void)_uploadLightingSetBuffer:(struct { unsigned char x1[8]; })arg1;
- (void)beginFrame:(id)arg1;
- (BOOL)beginRenderPass:(struct __C3DFXPass { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __CFString {} *x2; int x3; bool x4; struct __C3DFXTechnique {} *x5; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFString {} *x8; bool x9; struct __C3DFXProgram {} *x10; struct __C3DMaterial {} *x11; struct __C3DBlendStates {} *x12; struct __C3DRasterizerStates {} *x13; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_14_1_1; } x14; unsigned char x15; unsigned int x16; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; unsigned int x38 : 1; unsigned int x39 : 1; struct __C3DRendererElement {} *x40; unsigned long x41; unsigned long x42; struct { int (*x_43_1_1)(); int (*x_43_1_2)(); int (*x_43_1_3)(); int (*x_43_1_4)(); int (*x_43_1_5)(); int (*x_43_1_6)(); int (*x_43_1_7)(); int (*x_43_1_8)(); void *x_43_1_9; } x43; struct { struct { unsigned char x_1_2_1; unsigned char x_1_2_2; unsigned int x_1_2_3 : 1; unsigned int x_1_2_4 : 1; unsigned int x_1_2_5 : 1; unsigned int x_1_2_6 : 1; unsigned char x_1_2_7[1]; } x_44_1_1; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned int x_2_2_3 : 1; unsigned int x_2_2_4 : 1; unsigned int x_2_2_5 : 1; unsigned int x_2_2_6 : 1; unsigned char x_2_2_7[1]; } x_44_1_2; unsigned int x_44_1_3 : 1; unsigned int x_44_1_4 : 1; } x44; struct CGPoint { float x_45_1_1; float x_45_1_2; } x45; struct { /* ? */ } *x46; unsigned int x47; struct __C3DNode {} *x48; struct __C3DNode {} *x49; struct __CFArray {} *x50; struct __C3DNode {} *x51; struct __CFString {} *x52; struct __CFString {} *x53; struct __CFString {} *x54; void *x55; struct __C3DFXPassInput {} **x56; int x57; int x58; struct __CFDictionary {} *x59; struct __CFDictionary {} *x60; struct { unsigned int x_61_1_1 : 1; bool x_61_1_2; unsigned char x_61_1_3; } x61; }*)arg1 isFinalTechnique:(BOOL)arg2;
- (id)clientCommandBuffer;
- (id)clientRenderCommandEncoder;
- (id)clientRenderPassDescriptor;
- (id)commandQueue;
- (struct __C3DMeshElement { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct __CFData {} *x2; unsigned int x3; unsigned int x4; unsigned int x5; struct __C3DMeshElement {} *x6; unsigned char x7; unsigned char x8; unsigned char x9; BOOL x10; void *x11; struct __C3DMeshSource {} *x12; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x13[2]; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; id x27; void*x28; void*x29; id x30; void*x31; void*x32; id x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; SEL x49; void*x50; void*x51; void*x52; void*x53; void*x54; unsigned char x55; out const void*x56; long doublex57; void*x58; unsigned long x59; void*x60; void*x61; float x62; long doublex63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; long x70; out void*x71; double x72; void*x73; void*x74; void*x75; void*x76; SEL x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; unsigned short x84; void*x85; short x86; void*x87; void*x88; void*x89; void*x90; unsigned long x91; int x92; unsigned int x93/* : ? */; const void*x94; const void*x95; void*x96; void*x97; const int x98; void x99; void*x100; void*x101; void*x102; void*x103; const void*x104; void*x105; void*x106; void*x107; out const void*x108; short x109; void*x110; unsigned char x111; out const void*x112; long doublex113; void*x114; void*x115; float x116; const void*x117; void*x118; void*x119; void*x120; out const void*x121; void*x122; unsigned char x123; out const void*x124; long doublex125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; SEL x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; float x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; SEL x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; id x308; void*x309; void*x310; id x311; void*x312; short x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; SEL x331; void*x332; void*x333; void*x334; void*x335; void*x336; unsigned char x337; inout unsigned char x338; out void*x339; in void*x340; const void*x341; void*x342; int x343; BOOL x344; void*x345; void*x346; const unsigned char x347; out in void*x348; const out long x349; long x350; void*x351; const void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; SEL x369; void*x370; void*x371; void*x372; void*x373; void*x374; unsigned char x375; inout unsigned char x376; out void*x377; in void*x378; const void*x379; void*x380; int x381; BOOL x382; void*x383; void*x384; const unsigned char x385; out in void*x386; const out long x387; long x388; void*x389; const void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; SEL x407; void*x408; void*x409; void*x410; void*x411; SEL x412; void*x413; unsigned short x414; void*x415; short x416; void*x417; void*x418; void*x419; void*x420; unsigned long x421; int x422; unsigned int x423/* : ? */; const void*x424; const void*x425; void*x426; void*x427; const void*x428; void*x429; void*x430; void*x431; out const void*x432; short x433; void*x434; unsigned char x435; out in void*x436; void*x437; BOOL x438; void*x439; short x440; void*x441; unsigned int x442; void*x443; float x444; const void*x445; void*x446; void*x447; void*x448; out const void*x449; void*x450; unsigned char x451; out in void*x452; void*x453; BOOL x454; void*x455; short x456; void*x457; unsigned int x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; short x472; void*x473; const void*x474; void*x475; void*x476; void x477; void*x478; void*x479; void*x480; id x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; union x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; SEL x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; id x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; SEL x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; SEL x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; SEL x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; SEL x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; long doublex650; long doublex651; void*x652; void*x653; void*x654; void*x655; int x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; char *x707; void*x708; void*x709; void*x710; char *x711; void*x712; void*x713; void*x714; char *x715; void*x716; void*x717; void*x718; char *x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; long long x746; void*x747; void*x748; void*x749; void*x750; char *x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; char *x763; void*x764; void*x765; void*x766; char *x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; char *x795; void*x796; void*x797; void*x798; char *x799; void*x800; void*x801; void*x802; char *x803; unsigned long long x804; void*x805; void*x806; char *x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; short x824; void*x825; long long x826; void*x827; void*x828; void*x829; void*x830; char *x831; void*x832; void*x833; void*x834; char *x835; void*x836; long long x837; void*x838; char *x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; const void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void**x911; void*x912; char *x913; void*x914; void*x915; void*x916; char *x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; void*x928; void*x929; void*x930; void*x931; id x932; void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void x942; in void*x943; void*x944; void*x945; void x946; void*x947; void*x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; id x982; void*x983; void*x984; long x985; void*x986; void*x987; void*x988; long x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; SEL x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; unsigned char x1012; long doublex1013; void*x1014; void*x1015; in void*x1016; void*x1017; void*x1018; double x1019; BOOL x1020; BOOL x1021; out void*x1022; in void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void* x1035[ /* ? */ ]; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; out void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; unsigned long long x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; id x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; float x1106; void*x1107; long long x1108; void*x1109; void*x1110; double x1111; long long x1112; void*x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; in void*x1131; void*x1132; void*x1133; double x1134; void*x1135; void*x1136; void*x1137; long x1138; void*x1139; out void*x1140; in void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; SEL x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; void*x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; void*x1173; void*x1174; void*x1175; void*x1176; void*x1177; void*x1178; void*x1179; void*x1180; void*x1181; void*x1182; void*x1183; SEL x1184; void*x1185; void*x1186; void*x1187; void*x1188; void*x1189; void*x1190; void*x1191; void*x1192; void*x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; void*x1204; void*x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; void*x1212; void*x1213; void*x1214; SEL x1215; void*x1216; void*x1217; void*x1218; void*x1219; void*x1220; void*x1221; long doublex1222; void*x1223; void*x1224; const void*x1225; void*x1226; const void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; void*x1242; void*x1243; void*x1244; void*x1245; void*x1246; void*x1247; double x1248; void*x1249; void*x1250; void*x1251; unsigned short x1252; unsigned short x1253; void*x1254; BOOL x1255; void*x1256; const void*x1257; unsigned char x1258; out double x1259; int x1260; in void*x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; void*x1270; void*x1271; void*x1272; void*x1273; void*x1274; void*x1275; void*x1276; in void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; void*x1282; void*x1283; void*x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; void*x1290; void*x1291; void*x1292; void*x1293; void*x1294; void*x1295; void*x1296; void*x1297; void*x1298; void*x1299; void*x1300; void*x1301; void*x1302; void*x1303; void*x1304; void*x1305; void*x1306; void*x1307; void*x1308; void*x1309; void*x1310; unsigned long long x1311; void*x1312; long doublex1313; bycopy void*x1314; void*x1315; void*x1316; unsigned long x1317; void*x1318; void*x1319; void*x1320; void*x1321; void*x1322; void*x1323; void*x1324; void*x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; void*x1331; void*x1332; void*x1333; void*x1334; void*x1335; void*x1336; BOOL x1337; float x1338; void*x1339; void*x1340; void*x1341; unsigned short x1342; void*x1343; short x1344; void*x1345; void*x1346; void*x1347; void*x1348; unsigned long x1349; int x1350; unsigned int x1351/* : ? */; const void*x1352; const void*x1353; void*x1354; void*x1355; const int x1356; void x1357; void*x1358; void*x1359; void*x1360; void*x1361; const void*x1362; void*x1363; void*x1364; void*x1365; out const void*x1366; short x1367; void*x1368; int x1369; void*x1370; out const void*x1371; unsigned int x1372; void*x1373; void*x1374; out const void*x1375; void*x1376; float x1377; const void*x1378; void*x1379; void*x1380; void*x1381; out const void*x1382; void*x1383; int x1384; void*x1385; out const void*x1386; unsigned int x1387; void*x1388; void*x1389; out const void*x1390; void*x1391; void*x1392; void*x1393; void*x1394; void*x1395; void*x1396; void*x1397; void*x1398; void*x1399; char *x1400; in void*x1401; void*x1402; void*x1403; void*x1404; void*x1405; void*x1406; void*x1407; void*x1408; void*x1409; void*x1410; void*x1411; void*x1412; void*x1413; void*x1414; void*x1415; void*x1416; void*x1417; void*x1418; void*x1419; void*x1420; void*x1421; void*x1422; void*x1423; void*x1424; void*x1425; void*x1426; void*x1427; void*x1428; void*x1429; void*x1430; void*x1431; void*x1432; void*x1433; void*x1434; void*x1435; void*x1436; void*x1437; void*x1438; void*x1439; void*x1440; void*x1441; void*x1442; void*x1443; void*x1444; void*x1445; void*x1446; void*x1447; void*x1448; void*x1449; void*x1450; void*x1451; void*x1452; void*x1453; void*x1454; void*x1455; void*x1456; void*x1457; void*x1458; void*x1459; void*x1460; void*x1461; void*x1462; void*x1463; void*x1464; void*x1465; id x1466; void*x1467; void*x1468; unsigned long long x1469; void*x1470; void*x1471; void*x1472; id x1473; void*x1474; void*x1475; void*x1476; void*x1477; void*x1478; void*x1479; void*x1480; void*x1481; void*x1482; void*x1483; void*x1484; void*x1485; void*x1486; void*x1487; void*x1488; SEL x1489; void*x1490; void*x1491; void*x1492; void*x1493; void*x1494; unsigned short x1495; void*x1496; void*x1497; void*x1498; const short x1499; int x1500; short x1501; void*x1502; void*x1503; in void*x1504; unsigned short x1505; void*x1506; out const void*x1507; void*x1508; void*x1509; void*x1510; void*x1511; void*x1512; void*x1513; void*x1514; void*x1515; void*x1516; SEL x1517; void*x1518; void*x1519; void*x1520; void*x1521; void*x1522; void*x1523; void*x1524; void*x1525; void*x1526; void*x1527; void*x1528; void*x1529; void*x1530; void*x1531; void*x1532; void*x1533; void*x1534; void*x1535; void*x1536; void*x1537; void*x1538; void*x1539; void*x1540; void*x1541; void*x1542; void*x1543; void*x1544; void*x1545; void*x1546; void*x1547; void*x1548; void*x1549; void*x1550; in void*x1551; void*x1552; void*x1553; void*x1554; id x1555; void*x1556; void*x1557; void*x1558; void*x1559; void*x1560; unsigned int x1561; void*x1562; void*x1563; void*x1564; float x1565; void*x1566; void*x1567; void*x1568; void*x1569; void*x1570; void*x1571; void*x1572; void*x1573; in void*x1574; int x1575; BOOL x1576; void*x1577; void*x1578; void*x1579; double x1580; BOOL x1581; BOOL x1582; out void*x1583; in void*x1584; void*x1585; out short x1586; void*x1587; void*x1588; void*x1589; void*x1590; void*x1591; void*x1592; void*x1593; void*x1594; void*x1595; void*x1596; void*x1597; void*x1598; void*x1599; void*x1600; void*x1601; void*x1602; void*x1603; void*x1604; void*x1605; unsigned long x1606; void*x1607; void*x1608; void*x1609; unsigned short x1610; void*x1611; short x1612; void*x1613; void*x1614; void*x1615; void*x1616; unsigned long x1617; int x1618; unsigned int x1619/* : ? */; const void*x1620; const void*x1621; void*x1622; void*x1623; const int x1624; void x1625; void*x1626; void*x1627; void*x1628; void*x1629; const void*x1630; void*x1631; void*x1632; void*x1633; out const void*x1634; short x1635; void*x1636; void*x1637; out void*x1638; void*x1639; void*x1640; unsigned int x1641/* : ? */; void*x1642; void*x1643; float x1644; const void*x1645; void*x1646; void*x1647; void*x1648; out const void*x1649; void*x1650; void*x1651; out void*x1652; void*x1653; void*x1654; unsigned int x1655/* : ? */; void*x1656; void*x1657; void*x1658; void*x1659; void*x1660; void*x1661; void*x1662; void*x1663; void*x1664; void*x1665; void*x1666; void*x1667; void*x1668; void*x1669; void*x1670; void*x1671; void*x1672; void*x1673; void*x1674; in void*x1675; void*x1676; void*x1677; void*x1678; void*x1679; void*x1680; void*x1681; void*x1682; void*x1683; void*x1684; void*x1685; void*x1686; void*x1687; void*x1688; void*x1689; void*x1690; void*x1691; void*x1692; void*x1693; void*x1694; void*x1695; void*x1696; void*x1697; void*x1698; void*x1699; void*x1700; }*)createVolatileMeshElementOfType:(BOOL)arg1 primitiveCount:(int)arg2 bytesPerIndex:(int)arg3;
- (id)currentCommandBuffer;
- (id)currentRenderCommandEncoder;
- (id)currentRenderPassDescriptor;
- (void)dealloc;
- (id)device;
- (void)drawFullScreenQuadForPass:(struct __C3DFXPass { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __CFString {} *x2; int x3; bool x4; struct __C3DFXTechnique {} *x5; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFString {} *x8; bool x9; struct __C3DFXProgram {} *x10; struct __C3DMaterial {} *x11; struct __C3DBlendStates {} *x12; struct __C3DRasterizerStates {} *x13; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_14_1_1; } x14; unsigned char x15; unsigned int x16; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; unsigned int x38 : 1; unsigned int x39 : 1; struct __C3DRendererElement {} *x40; unsigned long x41; unsigned long x42; struct { int (*x_43_1_1)(); int (*x_43_1_2)(); int (*x_43_1_3)(); int (*x_43_1_4)(); int (*x_43_1_5)(); int (*x_43_1_6)(); int (*x_43_1_7)(); int (*x_43_1_8)(); void *x_43_1_9; } x43; struct { struct { unsigned char x_1_2_1; unsigned char x_1_2_2; unsigned int x_1_2_3 : 1; unsigned int x_1_2_4 : 1; unsigned int x_1_2_5 : 1; unsigned int x_1_2_6 : 1; unsigned char x_1_2_7[1]; } x_44_1_1; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned int x_2_2_3 : 1; unsigned int x_2_2_4 : 1; unsigned int x_2_2_5 : 1; unsigned int x_2_2_6 : 1; unsigned char x_2_2_7[1]; } x_44_1_2; unsigned int x_44_1_3 : 1; unsigned int x_44_1_4 : 1; } x44; struct CGPoint { float x_45_1_1; float x_45_1_2; } x45; struct { /* ? */ } *x46; unsigned int x47; struct __C3DNode {} *x48; struct __C3DNode {} *x49; struct __CFArray {} *x50; struct __C3DNode {} *x51; struct __CFString {} *x52; struct __CFString {} *x53; struct __CFString {} *x54; void *x55; struct __C3DFXPassInput {} **x56; int x57; int x58; struct __CFDictionary {} *x59; struct __CFDictionary {} *x60; struct { unsigned int x_61_1_1 : 1; bool x_61_1_2; unsigned char x_61_1_3; } x61; }*)arg1;
- (void)drawRenderElement:(struct __C3DRendererElement { struct __C3DNode {} *x1; struct __C3DGeometry {} *x2; struct __C3DMesh {} *x3; void *x4; struct __C3DMaterial {} *x5; struct __C3DFXTechnique {} *x6; struct __C3DRendererElementProgramHashCode {} *x7; struct { unsigned char x_8_1_1[8]; } x8; int x9; unsigned int x10; unsigned int x11 : 8; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; }*)arg1 withPass:(struct __C3DFXPass { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __CFString {} *x2; int x3; bool x4; struct __C3DFXTechnique {} *x5; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFString {} *x8; bool x9; struct __C3DFXProgram {} *x10; struct __C3DMaterial {} *x11; struct __C3DBlendStates {} *x12; struct __C3DRasterizerStates {} *x13; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_14_1_1; } x14; unsigned char x15; unsigned int x16; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; unsigned int x38 : 1; unsigned int x39 : 1; struct __C3DRendererElement {} *x40; unsigned long x41; unsigned long x42; struct { int (*x_43_1_1)(); int (*x_43_1_2)(); int (*x_43_1_3)(); int (*x_43_1_4)(); int (*x_43_1_5)(); int (*x_43_1_6)(); int (*x_43_1_7)(); int (*x_43_1_8)(); void *x_43_1_9; } x43; struct { struct { unsigned char x_1_2_1; unsigned char x_1_2_2; unsigned int x_1_2_3 : 1; unsigned int x_1_2_4 : 1; unsigned int x_1_2_5 : 1; unsigned int x_1_2_6 : 1; unsigned char x_1_2_7[1]; } x_44_1_1; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned int x_2_2_3 : 1; unsigned int x_2_2_4 : 1; unsigned int x_2_2_5 : 1; unsigned int x_2_2_6 : 1; unsigned char x_2_2_7[1]; } x_44_1_2; unsigned int x_44_1_3 : 1; unsigned int x_44_1_4 : 1; } x44; struct CGPoint { float x_45_1_1; float x_45_1_2; } x45; struct { /* ? */ } *x46; unsigned int x47; struct __C3DNode {} *x48; struct __C3DNode {} *x49; struct __CFArray {} *x50; struct __C3DNode {} *x51; struct __CFString {} *x52; struct __CFString {} *x53; struct __CFString {} *x54; void *x55; struct __C3DFXPassInput {} **x56; int x57; int x58; struct __CFDictionary {} *x59; struct __CFDictionary {} *x60; struct { unsigned int x_61_1_1 : 1; bool x_61_1_2; unsigned char x_61_1_3; } x61; }*)arg2;
- (void)endFrameWaitingUntilCompleted:(BOOL)arg1;
- (void)endRenderPass;
- (unsigned long)features;
- (id)initWithDevice:(id)arg1 engineContext:(struct __C3DEngineContext { }*)arg2;
- (BOOL)mapVolatileMesh:(struct __C3DMesh { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct __CFArray {} *x2[9]; struct C3DSphere {} *x3; struct __CFArray {} **x4; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 4; int x9; }*)arg1 verticesCount:(int)arg2;
- (id)newRenderTargetWithDescription:(void *)arg1 size:(void *)arg2; // needs 2 arg types, found 1: struct { unsigned char x1; unsigned char x2; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned char x7[1]; }*
- (void)popDebugGroup;
- (void)processRendererElement:(struct __C3DRendererElement { struct __C3DNode {} *x1; struct __C3DGeometry {} *x2; struct __C3DMesh {} *x3; void *x4; struct __C3DMaterial {} *x5; struct __C3DFXTechnique {} *x6; struct __C3DRendererElementProgramHashCode {} *x7; struct { unsigned char x_8_1_1[8]; } x8; int x9; unsigned int x10; unsigned int x11 : 8; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; }*)arg1;
- (long)profile;
- (void)pushDebugGroup:(id)arg1;
- (void)renderBackground:(struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; void *x3; union { struct __C3DImage {} *x_4_1_1; void *x_4_1_2; struct __C3DImageProxy {} *x_4_1_3; struct __C3DTexture {} *x_4_1_4; } x4; unsigned int x5 : 8; unsigned int x6 : 1; int x7; struct __C3DTextureSampler {} *x8; struct __C3DTransforms {} *x9; float x10; int x11; void *x12; }*)arg1 engineContext:(struct __C3DEngineContext { }*)arg2;
- (void)renderMesh:(struct __C3DMesh { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct __CFArray {} *x2[9]; struct C3DSphere {} *x3; struct __CFArray {} **x4; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 4; int x9; }*)arg1 meshElement:(struct __C3DMeshElement { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct __CFData {} *x2; unsigned int x3; unsigned int x4; unsigned int x5; struct __C3DMeshElement {} *x6; unsigned char x7; unsigned char x8; unsigned char x9; BOOL x10; void *x11; struct __C3DMeshSource {} *x12; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x13[2]; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; SEL x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; long doublex27; unsigned int x28; long doublex29; unsigned short x30; unsigned short x31; void*x32; const void*x33; void*x34; void*x35; int x36; in void*x37; void*x38; void*x39; void*x40; out const void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; bycopy void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; struct x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; float x85; void*x86; long x87; void*x88; out void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; const void*x96; void*x97; void*x98; unsigned int x99/* : ? */; void*x100; void*x101; void*x102; void* x103[ /* ? */ ]; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; short x139; void*x140; void*x141; void*x142; const void*x143; void*x144; void*x145; BOOL x146; void*x147; void*x148; void*x149; void*x150; void*x151; struct x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; float x190; void*x191; long x192; void*x193; out void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; const void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; float x240; void*x241; long x242; void*x243; out void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; float x291; void*x292; long x293; void*x294; out void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; unsigned int x302/* : ? */; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; float x342; void*x343; long x344; void*x345; out void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; }*)arg2 withProgram:(struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; int x2; unsigned int x3 : 1; unsigned int x4 : 1; struct __C3DFXProgramDelegate {} *x5; }*)arg3 engineContext:(struct __C3DEngineContext { }*)arg4 transform:(union C3DMatrix4x4 { float x1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x2[4]; void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; short x57; void*x58; void*x59; void*x60; void*x61; bycopy void*x62; int x63; long x64; void*x65; unsigned short x66; void*x67; const void x68; void*x69; const unsigned long x70; out BOOL x71; void*x72; long x73; void*x74; const out void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; long x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; int x104; long x105; BOOL x106; BOOL x107; out void*x108; in void*x109; void*x110; const out void*x111; void*x112; void*x113; void*x114; in void*x115; const void*x116; void*x117; out const void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; long doublex131; struct x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; const out short x166; short x167; void*x168; void*x169; double x170; void*x171; oneway int x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; unsigned long x189; void*x190; void*x191; void*x192; void*x193; unsigned short x194; void*x195; short x196; void*x197; void*x198; void*x199; void*x200; unsigned long x201; int x202; unsigned int x203/* : ? */; const void*x204; const void*x205; void*x206; void*x207; const void*x208; void*x209; void*x210; void*x211; out const void*x212; short x213; void*x214; void*x215; void x216; void*x217; in void*x218; void*x219; int x220; void*x221; void*x222; unsigned int x223; void*x224; float x225; const void*x226; void*x227; void*x228; void*x229; out const void*x230; void*x231; void*x232; void x233; void*x234; in void*x235; void*x236; int x237; void*x238; void*x239; unsigned int x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; double x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; SEL x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; out long x297; void*x298; void*x299; out in in in out void*x300; void*x301; void*x302; int x303; out in void*x304; void x305; void*x306; in void*x307; void*x308; void*x309; in double x310; long x311; void*x312; const void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; unsigned short x331; void*x332; void*x333; void*x334; void*x335; out in void*x336; in void*x337; int x338; void*x339; long x340; void*x341; void*x342; void*x343; const void*x344; short x345; short x346; int x347; out in void*x348; out double x349; void*x350; long x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; unsigned int x372; void*x373; out BOOL x374; void*x375; short x376; void*x377; in void*x378; int x379; in void*x380; void*x381; void*x382; const void*x383; void*x384; void*x385; void*x386; double x387; long doublex388; void*x389; in void*x390; void*x391; int x392; BOOL x393; void*x394; int x395; void*x396; void*x397; void*x398; int x399; out in void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; unsigned long x412; void*x413; out void*x414; void*x415; const short x416; short x417; void*x418; const void*x419; int x420; out in void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; unsigned long long x434; void*x435; void*x436; void*x437; unsigned int x438; void*x439; const out void*x440; out BOOL x441; out long x442; long doublex443; void*x444; unsigned int x445/* : ? */; void*x446; void*x447; void*x448; void*x449; const unsigned char x450; unsigned short x451; void*x452; oneway int x453; out long x454; void*x455; void*x456; int x457; out in void*x458; void*x459; void*x460; short x461; void*x462; void*x463; void*x464; void*x465; short x466; out in void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; long x486; void*x487; void*x488; void*x489; void*x490; void*x491; unsigned char x492; void*x493; void*x494; short x495; short x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; inout unsigned char x521; out in void*x522; void*x523; BOOL x524; void*x525; void*x526; void*x527; long x528; void*x529; int x530; oneway void*x531; long x532; void*x533; void*x534; long doublex535; int x536; float x537; float x538; void*x539; void*x540; double x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; short x561; void*x562; void*x563; void*x564; unsigned short x565; unsigned char x566; void*x567; void*x568; void*x569; void*x570; void*x571; long x572; void*x573; void*x574; void*x575; in void*x576; bool x577; void*x578; int x579; long x580; double x581; void*x582; const void*x583; void*x584; void*x585; void*x586; void*x587; id x588; void*x589; void*x590; void*x591; void*x592; void*x593; unsigned short x594; void*x595; unsigned int x596/* : ? */; void*x597; int x598; void*x599; long x600; void*x601; double x602; bool x603; void*x604; void*x605; void*x606; out in unsigned char x607; out in void*x608; void*x609; in void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; short x632; void*x633; void*x634; void*x635; unsigned int x636; bycopy void*x637; void*x638; int x639; long x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; unsigned long x667; void*x668; out void*x669; void*x670; in void*x671; inout out double x672; void*x673; unsigned char x674; void*x675; BOOL x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; long x687; long long x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; long long x724; void*x725; void*x726; void*x727; void*x728; unsigned char x729; void*x730; void*x731; void*x732; void*x733; out const int x734; void*x735; short x736; void*x737; int x738; BOOL x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; unsigned short x757; void*x758; short x759; void*x760; void*x761; void*x762; void*x763; unsigned long x764; int x765; unsigned int x766/* : ? */; const void*x767; const void*x768; void*x769; void*x770; const void*x771; void*x772; void*x773; void*x774; out const void*x775; short x776; void*x777; void*x778; void*x779; void*x780; void*x781; int x782; void*x783; void*x784; float x785; const void*x786; void*x787; void*x788; void*x789; out const void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; int x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; long x871; bool x872; struct x873; void*x874; void*x875; inout void*x876; bycopy unsigned int x877/* : ? */; short x878; void*x879; const void x880; void*x881; const void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; void*x928; void*x929; void*x930; void*x931; void*x932; void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; double x982; int x983; void*x984; BOOL x985; void*x986; int x987; out in void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; long x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; SEL x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; SEL x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; unsigned int x1072; void*x1073; void*x1074; void*x1075; double x1076; int x1077; void*x1078; void*x1079; long x1080; void*x1081; void*x1082; void*x1083; in void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; SEL x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; void*x1109; void*x1110; void*x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; SEL x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; void**x1159; union { void*x_1160_1_1; void*x_1160_1_2; void*x_1160_1_3; union { void*x_4_2_1; void*x_4_2_2; const void*x_4_2_3; void*x_4_2_4; void*x_4_2_5; void*x_4_2_6; union { void*x_7_3_1; void x_7_3_2; } x_4_2_7; void*x_4_2_8; void*x_4_2_9; void*x_4_2_10; union { void*x_11_3_1; } x_4_2_11; void*x_4_2_12; } x_1160_1_4; void*x_1160_1_5; void*x_1160_1_6; void*x_1160_1_7; union { void*x_8_2_1; void x_8_2_2; } x_1160_1_8; void*x_1160_1_9; void*x_1160_1_10; void*x_1160_1_11; union { void*x_12_2_1; } x_1160_1_12; void*x_1160_1_13; } x1160; void*x1161; void*x1162; void*x1163; union { void*x_1164_1_1; void x_1164_1_2; } x1164; void*x1165; void*x1166; void*x1167; union { void*x_1168_1_1; } x1168; void*x1169; })arg5 color:(const struct C3DColor4 { union { float x_1_1_1[4]; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_1_1_2; } x1; }*)arg6 rasterizerStates:(struct __C3DRasterizerStates { }*)arg7 blendState:(struct __C3DBlendStates { }*)arg8 texture:(struct __C3DImage { }*)arg9 depthBias:(BOOL)arg10;
- (void)resetVolatileMeshElements;
- (void)resetVolatileMeshes;
- (id)resourceManager;
- (void)setClientCommandBuffer:(id)arg1;
- (void)setClientRenderCommandEncoder:(id)arg1;
- (void)setClientRenderPassDescriptor:(id)arg1;
- (void)setCommandQueue:(id)arg1;
- (void)setRasterizerStates:(struct __C3DRasterizerStates { }*)arg1;
- (void)setShowsAuthoringEnvironment:(BOOL)arg1;
- (BOOL)showsAuthoringEnvironment;
- (void)startProcessingRendererElementsWithEngineIterationContext:(struct { struct __C3DEnginePipeline {} *x1; struct __C3DEngineContext {} *x2; struct __C3DFXPassInstance {} *x3; int *x4; struct __C3DNode {} *x5; bool x6; bool x7; }*)arg1;
- (void)stopProcessingRendererElements;
- (id)textureForEffectSlot:(struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; void *x3; union { struct __C3DImage {} *x_4_1_1; void *x_4_1_2; struct __C3DImageProxy {} *x_4_1_3; struct __C3DTexture {} *x_4_1_4; } x4; unsigned int x5 : 8; unsigned int x6 : 1; int x7; struct __C3DTextureSampler {} *x8; struct __C3DTransforms {} *x9; float x10; int x11; void *x12; }*)arg1;
- (void)unmapVolatileMesh:(struct __C3DMesh { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct __CFArray {} *x2[9]; struct C3DSphere {} *x3; struct __CFArray {} **x4; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 4; int x9; }*)arg1;
- (void)writeBytes:(void*)arg1 length:(unsigned int)arg2;

@end
