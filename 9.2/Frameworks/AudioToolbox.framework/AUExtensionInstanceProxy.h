/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 */

@interface AUExtensionInstanceProxy : NSObject {
    struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; struct vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> >, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_1; struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_2; struct __compressed_pair<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > *, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_3_2_1; } x_9_1_3; } x9; struct unique_ptr<AUv3InstanceBase::AllParameterListener, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct __compressed_pair<AUv3InstanceBase::AllParameterListener *, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct AllParameterListener {} *x_1_2_1; } x_10_1_1; } x10; struct AUv3RenderAdapter { struct CAMutex { int (**x_1_2_1)(); char *x_1_2_2; struct _opaque_pthread_t {} *x_1_2_3; struct _opaque_pthread_mutex_t { long x_4_3_1; BOOL x_4_3_2[40]; } x_1_2_4; } x_11_1_1; struct vector<AUv3RenderAdapter::AUInputElement, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_2_2_1; struct AUInputElement {} *x_2_2_2; struct __compressed_pair<AUv3RenderAdapter::AUInputElement *, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_3_3_1; } x_2_2_3; } x_11_1_2; id /* block */ x_11_1_3; } x11; id /* block */ x12; id /* block */ x13; struct ParameterMap { id x_14_1_1; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_2_2_1; struct ScopeElementIDObj {} *x_2_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_2_2_3; } x_14_1_2; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_2_1; struct ScopeElementIDObj {} *x_3_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_3_2_3; } x_14_1_3; } x14; struct HostCallbackInfo { void *x_15_1_1; int (*x_15_1_2)(); int (*x_15_1_3)(); int (*x_15_1_4)(); int (*x_15_1_5)(); } x15; } * _auInstance;
}

@property (nonatomic) struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; /* Warning: unhandled struct encoding: '{vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener' */ struct x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; out void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; SEL x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; bool x112; long long x113; unsigned long long x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; SEL x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; unsigned short x150; long doublex151; unsigned long x152; void*x153; void*x154; in double x155; long x156; void*x157; void*x158; const void*x159; void*x160; void*x161; void*x162; const void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; long doublex173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; float x190; void*x191; void*x192; void*x193; void*x194; short x195; int x196; BOOL x197; unsigned short x198; void*x199; void*x200; const BOOL x201; void*x202; void*x203; void*x204; BOOL x205; void*x206; in void*x207; short x208; unsigned short x209; void*x210; out const void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; unsigned char x233; out void*x234; void*x235; void*x236; unsigned short x237; void*x238; short x239; void*x240; void*x241; void*x242; void*x243; unsigned long x244; int x245; unsigned int x246/* : ? */; const void*x247; const void*x248; void*x249; void*x250; const int x251; void x252; void*x253; void*x254; void*x255; void*x256; const void*x257; void*x258; void*x259; void*x260; out const void*x261; short x262; void*x263; void*x264; void*x265; short x266; void*x267; void*x268; unsigned int x269; void*x270; float x271; const void*x272; void*x273; void*x274; void*x275; out const void*x276; void*x277; void*x278; void*x279; short x280; void*x281; void*x282; unsigned int x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; unsigned long long x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; SEL x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; long doublex341; BOOL x342; BOOL x343; void*x344; short x345; short x346; out const void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; bool x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; double x396; void*x397; void*x398; unsigned short x399; void*x400; bool x401; void*x402; float x403; float x404; void*x405; const void*x406; double x407; void*x408; void*x409; void*x410; double x411; unsigned char x412; void*x413; void*x414; in in void*x415; long x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; const void*x424; void*x425; void*x426; unsigned short x427; void*x428; short x429; void*x430; void*x431; void*x432; void*x433; unsigned long x434; int x435; unsigned int x436/* : ? */; const void*x437; const void*x438; void*x439; void*x440; const int x441; void x442; void*x443; void*x444; void*x445; void*x446; const void*x447; void*x448; void*x449; void*x450; out const void*x451; short x452; void*x453; int x454; void*x455; out const void*x456; unsigned int x457; void*x458; void*x459; out const void*x460; void*x461; float x462; const void*x463; void*x464; void*x465; void*x466; out const void*x467; void*x468; int x469; void*x470; out const void*x471; unsigned int x472; void*x473; void*x474; out const void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; in void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; SEL x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; unsigned short x521; void*x522; short x523; void*x524; void*x525; void*x526; void*x527; unsigned long x528; int x529; unsigned int x530/* : ? */; const void*x531; const void*x532; void*x533; void*x534; const int x535; void x536; void*x537; void*x538; void*x539; void*x540; const void*x541; void*x542; void*x543; void*x544; out const void*x545; short x546; void*x547; void*x548; void*x549; unsigned int x550/* : ? */; void*x551; int x552; void*x553; unsigned long x554; void*x555; void*x556; void*x557; BOOL x558; void*x559; void*x560; float x561; const void*x562; void*x563; void*x564; void*x565; out const void*x566; void*x567; void*x568; void*x569; unsigned int x570/* : ? */; void*x571; int x572; void*x573; unsigned long x574; void*x575; void*x576; void*x577; BOOL x578; void*x579; void*x580; void*x581; void*x582; inout void*x583; void*x584; void*x585; out unsigned long long x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; out void*x593; void*x594; void*x595; out void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; inout void*x630; unsigned long long x631; void*x632; void*x633; void*x634; unsigned int x635; void*x636; void*x637; void*x638; const void*x639; void*x640; unsigned char x641; void*x642; BOOL x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void* x658[ /* ? */ ]; void*x659; unsigned short x660; void*x661; short x662; void*x663; void*x664; void*x665; void*x666; unsigned long x667; int x668; unsigned int x669/* : ? */; const void*x670; const void*x671; void*x672; void*x673; const int x674; void x675; void*x676; void*x677; void*x678; void*x679; const void*x680; void*x681; void*x682; void*x683; out const void*x684; short x685; void*x686; void*x687; void*x688; unsigned int x689/* : ? */; unsigned char x690; out in void*x691; void*x692; in void*x693; void*x694; void*x695; long x696; void*x697; short x698; int x699; short x700; void*x701; float x702; const void*x703; void*x704; void*x705; void*x706; out const void*x707; void*x708; void*x709; void*x710; unsigned int x711/* : ? */; unsigned char x712; out in void*x713; void*x714; in void*x715; void*x716; void*x717; long x718; void*x719; short x720; int x721; short x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; out unsigned long long x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; float x762; void*x763; unsigned short x764; void*x765; out void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; SEL x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; unsigned int x802; long doublex803; out BOOL x804; void*x805; void*x806; void*x807; in void*x808; void*x809; int x810; BOOL x811; void*x812; void*x813; const void*x814; void*x815; int x816; long x817; int x818; void*x819; const void*x820; bycopy void*x821; void*x822; int x823; out in void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; long long x833; unsigned long long x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; oneway unsigned char x841; out void*x842; void*x843; out short x844; int x845; void*x846; int x847; out in void*x848; const void*x849; BOOL x850; void*x851; unsigned short x852; void*x853; void*x854; void*x855; void*x856; in void*x857; unsigned int x858; in void*x859; void*x860; const in void*x861; long x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; char *x873; unsigned long long x874; float x875; void*x876; void*x877; unsigned short x878; void*x879; short x880; void*x881; void*x882; void*x883; void*x884; unsigned long x885; int x886; unsigned int x887/* : ? */; const void*x888; const void*x889; void*x890; void*x891; const void*x892; void*x893; void*x894; void*x895; out const void*x896; short x897; void*x898; void*x899; void*x900; out void*x901; in double x902; void*x903; void*x904; int x905; out in void*x906; float x907; const void*x908; void*x909; void*x910; void*x911; out const void*x912; void*x913; void*x914; void*x915; out void*x916; in double x917; void*x918; void*x919; int x920; out in void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; void*x928; void*x929; void*x930; void*x931; void*x932; void*x933; unsigned short x934; void*x935; out void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; SEL x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; const void*x1027; void*x1028; void*x1029; float x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; bycopy unsigned short x1052; void*x1053; const void x1054; void*x1055; const void*x1056; out const void*x1057; void*x1058; void*x1059; void*x1060; void*x1061; double x1062; unsigned short x1063; void*x1064; const int x1065; in void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; unsigned short x1091; void*x1092; short x1093; void*x1094; void*x1095; void*x1096; void*x1097; unsigned long x1098; int x1099; unsigned int x1100/* : ? */; const void*x1101; const void*x1102; void*x1103; void*x1104; const int x1105; void x1106; void*x1107; void*x1108; void*x1109; void*x1110; const void*x1111; void*x1112; void*x1113; void*x1114; out const void*x1115; short x1116; void*x1117; void*x1118; void*x1119; out unsigned short x1120; void*x1121; const void x1122; int x1123; BOOL x1124; void*x1125; short x1126; void*x1127; float x1128; const void*x1129; void*x1130; void*x1131; void*x1132; out const void*x1133; void*x1134; void*x1135; void*x1136; out unsigned short x1137; void*x1138; const void x1139; int x1140; BOOL x1141; void*x1142; short x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; void*x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; void*x1173; void*x1174; void*x1175; void*x1176; void*x1177; void*x1178; void*x1179; bycopy void*x1180; float x1181; void*x1182; bool x1183; int x1184; void*x1185; void*x1186; void*x1187; void*x1188; void*x1189; void*x1190; void*x1191; void*x1192; void*x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; void*x1204; void*x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; void*x1212; SEL x1213; void*x1214; void*x1215; void*x1216; void*x1217; void*x1218; unsigned char x1219; void*x1220; void*x1221; void*x1222; out unsigned short x1223; void*x1224; void*x1225; long x1226; int x1227; in void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; void*x1242; void*x1243; void*x1244; void*x1245; void*x1246; id x1247; void*x1248; void*x1249; void*x1250; void*x1251; void*x1252; void*x1253; void*x1254; void*x1255; void*x1256; SEL x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; unsigned short x1265; void*x1266; void*x1267; void*x1268; double x1269; unsigned int x1270/* : ? */; void*x1271; BOOL x1272; void*x1273; void*x1274; void*x1275; void*x1276; void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; void*x1282; void*x1283; void*x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; void*x1290; void*x1291; void*x1292; void*x1293; void*x1294; void*x1295; void*x1296; void*x1297; void*x1298; void*x1299; void*x1300; void*x1301; void*x1302; void*x1303; void*x1304; void*x1305; void*x1306; void*x1307; void*x1308; void*x1309; void*x1310; void*x1311; void*x1312; void*x1313; void*x1314; void*x1315; void*x1316; void*x1317; id x1318; void*x1319; void*x1320; void*x1321; void*x1322; void*x1323; void*x1324; void*x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; void*x1331; void*x1332; void*x1333; void*x1334; void*x1335; SEL x1336; void*x1337; void*x1338; void*x1339; void*x1340; void*x1341; void*x1342; unsigned short x1343; unsigned char x1344; void*x1345; void*x1346; void*x1347; const void*x1348; void*x1349; int x1350; long x1351; void*x1352; void*x1353; void*x1354; void*x1355; void*x1356; void*x1357; void*x1358; void*x1359; void*x1360; void*x1361; void*x1362; void*x1363; void*x1364; void*x1365; long long x1366; void*x1367; float x1368; void*x1369; const void*x1370; void*x1371; void*x1372; long doublex1373; unsigned int x1374; void*x1375; unsigned short x1376; void*x1377; void*x1378; unsigned long x1379; void*x1380; void*x1381; void*x1382; in BOOL x1383; void*x1384; long doublex1385; int x1386; void*x1387; void*x1388; in out short x1389; void*x1390; int x1391; BOOL x1392; unsigned char x1393; out in float x1394; int x1395; void*x1396; void*x1397; const void*x1398; void*x1399; int x1400; out in long doublex1401; int x1402; void*x1403; void*x1404; in out short x1405; void*x1406; int x1407; BOOL x1408; BOOL x1409; void*x1410; int x1411; out in void*x1412; void*x1413; void*x1414; void*x1415; void*x1416; void*x1417; void*x1418; void*x1419; void*x1420; void*x1421; void*x1422; void*x1423; void*x1424; void*x1425; void*x1426; void*x1427; void*x1428; void*x1429; void*x1430; void*x1431; void*x1432; void*x1433; out void*x1434; void*x1435; void*x1436; unsigned short x1437; void*x1438; short x1439; void*x1440; void*x1441; void*x1442; void*x1443; unsigned long x1444; int x1445; unsigned int x1446/* : ? */; const void*x1447; const void*x1448; void*x1449; void*x1450; const int x1451; void x1452; void*x1453; void*x1454; void*x1455; void*x1456; const void*x1457; void*x1458; void*x1459; void*x1460; out const void*x1461; short x1462; void*x1463; unsigned short x1464; void*x1465; unsigned int x1466/* : ? */; void*x1467; void*x1468; BOOL x1469; void*x1470; short x1471; void*x1472; float x1473; const void*x1474; void*x1475; void*x1476; void*x1477; out const void*x1478; void*x1479; unsigned short x1480; void*x1481; unsigned int x1482/* : ? */; void*x1483; void*x1484; BOOL x1485; void*x1486; short x1487; void*x1488; void*x1489; void*x1490; void*x1491; void*x1492; void*x1493; void*x1494; void*x1495; void*x1496; void*x1497; void*x1498; void*x1499; bool x1500; int x1501; void*x1502; void*x1503; void*x1504; void*x1505; void*x1506; void*x1507; void*x1508; void*x1509; void*x1510; void*x1511; void*x1512; void*x1513; void*x1514; void*x1515; void*x1516; void*x1517; void*x1518; void*x1519; void*x1520; void*x1521; void*x1522; void*x1523; void*x1524; void*x1525; void*x1526; void*x1527; void*x1528; void*x1529; SEL x1530; void*x1531; void*x1532; void*x1533; void*x1534; void*x1535; void*x1536; void*x1537; void*x1538; void*x1539; void*x1540; void*x1541; void*x1542; void*x1543; void*x1544; void*x1545; void*x1546; void*x1547; void*x1548; void*x1549; void*x1550; void*x1551; void*x1552; void*x1553; void*x1554; void*x1555; void*x1556; void*x1557; void*x1558; void*x1559; void*x1560; void*x1561; void*x1562; void*x1563; void*x1564; out void*x1565; void*x1566; void*x1567; void*x1568; void*x1569; void*x1570; void*x1571; void*x1572; void*x1573; void*x1574; void*x1575; void*x1576; void*x1577; void*x1578; void*x1579; void*x1580; void*x1581; void*x1582; void*x1583; void*x1584; void*x1585; void*x1586; void*x1587; void*x1588; void*x1589; void*x1590; void*x1591; void*x1592; void*x1593; void*x1594; void*x1595; void*x1596; void*x1597; void*x1598; void*x1599; void*x1600; void*x1601; void*x1602; unsigned long long x1603; void*x1604; void*x1605; void*x1606; void*x1607; void*x1608; void*x1609; void*x1610; void*x1611; void*x1612; void*x1613; void*x1614; void*x1615; void*x1616; void*x1617; void*x1618; void*x1619; void*x1620; void*x1621; void*x1622; void*x1623; void*x1624; SEL x1625; void*x1626; void*x1627; void*x1628; void*x1629; void*x1630; void*x1631; void*x1632; unsigned short x1633; long doublex1634; unsigned long x1635; void*x1636; void*x1637; in double x1638; long x1639; void*x1640; void*x1641; const void*x1642; void*x1643; void*x1644; void*x1645; const void*x1646; void*x1647; void*x1648; void*x1649; void*x1650; void*x1651; void*x1652; void*x1653; SEL x1654; void*x1655; void*x1656; void*x1657; void*x1658; void*x1659; void*x1660; void*x1661; void*x1662; void*x1663; void*x1664; void*x1665; void*x1666; void*x1667; void*x1668; void*x1669; void*x1670; void*x1671; void*x1672; void*x1673; void*x1674; void*x1675; void*x1676; void*x1677; void*x1678; void*x1679; void*x1680; void*x1681; void*x1682; void*x1683; void*x1684; void*x1685; void*x1686; void*x1687; void*x1688; unsigned char x1689; void*x1690; void*x1691; void*x1692; void*x1693; void*x1694; void*x1695; void*x1696; void*x1697; void*x1698; void*x1699; void*x1700; in void*x1701; void*x1702; long long x1703; long long x1704; void*x1705; void*x1706; long doublex1707; void*x1708; short x1709; BOOL x1710; const int x1711; void*x1712; void*x1713; int x1714; out in SEL x1715; union { short x_1716_1_1; void*x_1716_1_2; const void*x_1716_1_3; BOOL x_1716_1_4; void*x_1716_1_5; void*x_1716_1_6; void*x_1716_1_7; double x_1716_1_8; int x_1716_1_9; out unsigned char x_1716_1_10; out void*x_1716_1_11; void*x_1716_1_12; out in void*x_1716_1_13; in void*x_1716_1_14; long doublex_1716_1_15; void*x_1716_1_16; short x_1716_1_17; BOOL x_1716_1_18; const int x_1716_1_19; void*x_1716_1_20; void*x_1716_1_21; int x_1716_1_22; out in void*x_1716_1_23; struct  unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5;  {} x_1716_1_24; } x1716; void*x1717; const void*x1718; void*x1719; void*x1720; void*x1721; void*x1722; void*x1723; void*x1724; void*x1725; void*x1726; float x1727; void*x1728; long x1729; void*x1730; out void*x1731; void*x1732; void*x1733; void*x1734; void*x1735; void*x1736; void*x1737; void*x1738; void*x1739; void*x1740; void*x1741; void*x1742; void*x1743; void*x1744; void*x1745; void*x1746; void*x1747; void*x1748; void*x1749; void*x1750; void*x1751; void*x1752; void*x1753; void*x1754; void*x1755; float x1756; void*x1757; long x1758; void*x1759; out void*x1760; void*x1761; void*x1762; void*x1763; void*x1764; void*x1765; void*x1766; void*x1767; void*x1768; void*x1769; void*x1770; void*x1771; void*x1772; void*x1773; void*x1774; void*x1775; void*x1776; void*x1777; void*x1778; void*x1779; void*x1780; void*x1781; void*x1782; void*x1783; void*x1784; }*auInstance; /* unknown property attribute:  std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> >=^{ScopeElementIDObj}}}}{HostCallbackInfo=^v^?^?^?^?}} */

- (struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; struct vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> >, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_1; struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_2; struct __compressed_pair<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > *, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_3_2_1; } x_9_1_3; } x9; struct unique_ptr<AUv3InstanceBase::AllParameterListener, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct __compressed_pair<AUv3InstanceBase::AllParameterListener *, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct AllParameterListener {} *x_1_2_1; } x_10_1_1; } x10; struct AUv3RenderAdapter { struct CAMutex { int (**x_1_2_1)(); char *x_1_2_2; struct _opaque_pthread_t {} *x_1_2_3; struct _opaque_pthread_mutex_t { long x_4_3_1; BOOL x_4_3_2[40]; } x_1_2_4; } x_11_1_1; struct vector<AUv3RenderAdapter::AUInputElement, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_2_2_1; struct AUInputElement {} *x_2_2_2; struct __compressed_pair<AUv3RenderAdapter::AUInputElement *, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_3_3_1; } x_2_2_3; } x_11_1_2; id /* block */ x_11_1_3; } x11; id /* block */ x12; id /* block */ x13; struct ParameterMap { id x_14_1_1; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_2_2_1; struct ScopeElementIDObj {} *x_2_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_2_2_3; } x_14_1_2; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_2_1; struct ScopeElementIDObj {} *x_3_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_3_2_3; } x_14_1_3; } x14; struct HostCallbackInfo { void *x_15_1_1; int (*x_15_1_2)(); int (*x_15_1_3)(); int (*x_15_1_4)(); int (*x_15_1_5)(); } x15; }*)auInstance;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)setAuInstance:(struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; struct vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> >, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_1; struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_2; struct __compressed_pair<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > *, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_3_2_1; } x_9_1_3; } x9; struct unique_ptr<AUv3InstanceBase::AllParameterListener, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct __compressed_pair<AUv3InstanceBase::AllParameterListener *, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct AllParameterListener {} *x_1_2_1; } x_10_1_1; } x10; struct AUv3RenderAdapter { struct CAMutex { int (**x_1_2_1)(); char *x_1_2_2; struct _opaque_pthread_t {} *x_1_2_3; struct _opaque_pthread_mutex_t { long x_4_3_1; BOOL x_4_3_2[40]; } x_1_2_4; } x_11_1_1; struct vector<AUv3RenderAdapter::AUInputElement, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_2_2_1; struct AUInputElement {} *x_2_2_2; struct __compressed_pair<AUv3RenderAdapter::AUInputElement *, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_3_3_1; } x_2_2_3; } x_11_1_2; id /* block */ x_11_1_3; } x11; id /* block */ x12; id /* block */ x13; struct ParameterMap { id x_14_1_1; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_2_2_1; struct ScopeElementIDObj {} *x_2_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_2_2_3; } x_14_1_2; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_2_1; struct ScopeElementIDObj {} *x_3_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_3_2_3; } x_14_1_3; } x14; struct HostCallbackInfo { void *x_15_1_1; int (*x_15_1_2)(); int (*x_15_1_3)(); int (*x_15_1_4)(); int (*x_15_1_5)(); } x15; }*)arg1;

@end
