/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIButton : UIControl <ABText, NSCoding, UIGestureRecognizerDelegate, _UIFloatingContentViewDelegate> {
    UIImageView * _backgroundView;
    struct { 
        unsigned int reversesTitleShadowWhenHighlighted : 1; 
        unsigned int adjustsImageWhenHighlighted : 1; 
        unsigned int adjustsImageWhenDisabled : 1; 
        unsigned int autosizeToFit : 1; 
        unsigned int disabledDimsImage : 1; 
        unsigned int showsTouchWhenHighlighted : 1; 
        unsigned int buttonType : 8; 
        unsigned int shouldHandleScrollerMouseEvent : 1; 
        unsigned int titleFrozen : 1; 
        unsigned int resendTraitToImageViews : 2; 
        unsigned int animateNextHighlightChange : 1; 
        unsigned int blurEnabled : 1; 
        unsigned int visualEffectViewEnabled : 1; 
        unsigned int suppressAccessibilityUnderline : 1; 
        unsigned int requiresLayoutForPropertyChange : 1; 
    }  _buttonFlags;
    UIVisualEffectView * _contentBackdropView;
    NSArray * _contentConstraints;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    }  _contentEdgeInsets;
    struct __CFDictionary { } * _contentLookup;
    UIView * _effectiveContentView;
    unsigned int  _externalFlatEdge;
    _UIFloatingContentView * _floatingContentView;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    }  _imageEdgeInsets;
    UIImageView * _imageView;
    BOOL  _initialized;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    }  _internalTitlePaddingInsets;
    unsigned int  _lastDrawingControlState;
    UIFont * _lazyTitleViewFont;
    _UIButtonMaskAnimationView * _maskAnimationView;
    UITapGestureRecognizer * _selectGestureRecognizer;
    UIView * _selectionView;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    }  _titleEdgeInsets;
    UILabel * _titleView;
}

@property (setter=_setContentConstraints:, nonatomic, copy) NSArray *_contentConstraints;
@property (nonatomic, readonly, retain) UIColor *_currentImageColor;
@property (setter=_setExternalFlatEdge:) unsigned int _externalFlatEdge;
@property (setter=_setInternalTitlePaddingInsets:, nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } _internalTitlePaddingInsets;
@property (setter=_setWantsAccessibilityUnderline:, nonatomic) BOOL _wantsAccessibilityUnderline;
@property (nonatomic, copy) NSString *ab_text;
@property (nonatomic, copy) NSDictionary *ab_textAttributes;
@property (nonatomic) BOOL adjustsImageWhenDisabled;
@property (nonatomic) BOOL adjustsImageWhenHighlighted;
@property (nonatomic, readonly) int buttonType;
@property (nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } contentEdgeInsets;
@property (nonatomic, readonly) NSAttributedString *currentAttributedTitle;
@property (nonatomic, readonly) UIImage *currentBackgroundImage;
@property (nonatomic, readonly) UIImage *currentImage;
@property (nonatomic, readonly) NSString *currentTitle;
@property (nonatomic, readonly) UIColor *currentTitleColor;
@property (nonatomic, readonly) UIColor *currentTitleShadowColor;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } imageEdgeInsets;
@property (nonatomic, readonly) UIImageView *imageView;
@property (nonatomic) BOOL reversesTitleShadowWhenHighlighted;
@property (nonatomic) BOOL showsTouchWhenHighlighted;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIColor *tintColor;
@property (nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } titleEdgeInsets;
@property (nonatomic, readonly) UILabel *titleLabel;

// Image: /System/Library/Frameworks/UIKit.framework/UIKit

+ (BOOL)_buttonTypeIsModernUI:(int)arg1;
+ (id)_checkmarkImage;
+ (id)_defaultBackgroundImageForType:(int)arg1 andState:(unsigned int)arg2;
+ (id)_defaultImageColorForState:(unsigned int)arg1 button:(id)arg2;
+ (id)_defaultImageForType:(int)arg1 andState:(unsigned int)arg2;
+ (id)_defaultNormalTitleColor;
+ (id)_defaultNormalTitleShadowColor;
+ (id)_defaultTitleColorForState:(unsigned int)arg1 button:(id)arg2;
+ (id)_detailDisclosureImage;
+ (id)_exclamationMarkImage;
+ (id)_infoDarkImage;
+ (id)_infoLightImage;
+ (id)_minusImage;
+ (id)_plusImage;
+ (id)_questionMarkImage;
+ (id)_selectedIndicatorImage;
+ (void)_setVisuallyHighlighted:(BOOL)arg1 forViews:(id)arg2 initialPress:(BOOL)arg3;
+ (void)_setVisuallyHighlighted:(BOOL)arg1 forViews:(id)arg2 initialPress:(BOOL)arg3 baseAlpha:(float)arg4;
+ (id)_xImage;
+ (id)buttonWithType:(int)arg1;

- (void).cxx_destruct;
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (void)_applyAppropriateChargeForButtonType;
- (id)_archivableContent:(id*)arg1;
- (id)_attributedTitleForState:(unsigned int)arg1;
- (float)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;
- (float)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (id)_backgroundForState:(unsigned int)arg1 usesBackgroundForNormalState:(BOOL*)arg2;
- (id)_backgroundView;
- (void)_beginTitleAnimation;
- (BOOL)_blurEnabled;
- (id)_borderColorForState:(unsigned int)arg1;
- (float)_borderWidthForState:(unsigned int)arg1 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (int)_buttonType;
- (BOOL)_canHaveTitle;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_clippedHighlightBounds;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_combinedContentPaddingInsets;
- (id)_contentBackdropView;
- (id)_contentConstraints;
- (id)_contentForState:(unsigned int)arg1;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (unsigned int)_controlEventsForActionTriggered;
- (id)_createPreparedImageViewWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_currentImageColor;
- (void)_didChangeFromIdiom:(int)arg1 onScreen:(id)arg2 traverseHierarchy:(BOOL)arg3;
- (void)_didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (float)_drawingStrokeForState:(unsigned int)arg1;
- (float)_drawingStrokeForStyle:(int)arg1;
- (int)_drawingStyleForState:(unsigned int)arg1;
- (int)_drawingStyleForStroke:(float)arg1;
- (id)_effectiveContentView;
- (id)_encodableSubviews;
- (id)_externalBorderColorForState:(unsigned int)arg1;
- (int)_externalDrawingStyleForState:(unsigned int)arg1;
- (unsigned int)_externalFlatEdge;
- (id)_externalFocusedTitleColor;
- (id)_externalImageColorForState:(unsigned int)arg1;
- (id)_externalTitleColorForState:(unsigned int)arg1;
- (id)_externalUnfocusedBorderColor;
- (id)_fadeOutAnimationWithKeyPath:(id)arg1;
- (id)_floatingContentView;
- (id)_font;
- (BOOL)_hasCustomAutolayoutNeighborSpacing;
- (BOOL)_hasDrawingStyle;
- (BOOL)_hasHighlightColor;
- (BOOL)_hasImageForProperty:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_highlightBounds;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_highlightBoundsForDrawingStyle;
- (float)_highlightCornerRadius;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_highlightRectForImageRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_highlightRectForTextRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_imageColorForState:(unsigned int)arg1;
- (id)_imageForState:(unsigned int)arg1 usesImageForNormalState:(BOOL*)arg2;
- (BOOL)_imageNeedsCompositingModeWhenSelected;
- (id)_imageView;
- (void)_installSelectGestureRecognizer;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_internalTitlePaddingInsets;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)arg1;
- (struct CGSize { float x1; float x2; })_intrinsicSizeWithinSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_invalidateContentConstraints;
- (BOOL)_isEffectivelyDisabledExternalRoundedRectButton;
- (BOOL)_isExternalRoundedRectButton;
- (BOOL)_isExternalRoundedRectButtonWithPressednessState;
- (BOOL)_isModernButton;
- (BOOL)_isTitleFrozen;
- (void)_layoutBackgroundImageView;
- (void)_layoutContentBackdropView;
- (id)_layoutDebuggingTitle;
- (void)_layoutImageView;
- (void)_layoutTitleView;
- (id)_letterpressStyleForState:(unsigned int)arg1;
- (BOOL)_likelyToHaveTitle;
- (int)_lineBreakMode;
- (id)_newImageViewWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_newLabelWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_outsetInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_pathImageEdgeInsets;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_pathTitleEdgeInsets;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)_preferredConfigurationForFocusAnimation:(int)arg1 inContext:(id)arg2;
- (void)_prepareMaskAnimationViewIfNecessary;
- (BOOL)_requiresLayoutForPropertyChange;
- (id)_scriptingInfo;
- (void)_selectGestureChanged:(id)arg1;
- (float)_selectedIndicatorAlpha;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_selectedIndicatorBounds;
- (id)_selectedIndicatorViewWithImage:(id)arg1;
- (void)_sendSetNeedsLayoutToSuperviewOnTitleAnimationCompletionIfNecessary;
- (void)_setAttributedTitle:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setBackground:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setBlurEnabled:(BOOL)arg1;
- (void)_setButtonType:(int)arg1;
- (void)_setContent:(id)arg1 forState:(unsigned int)arg2;
- (void)_setContentConstraints:(id)arg1;
- (void)_setContentHuggingPriorities:(struct CGSize { float x1; float x2; })arg1;
- (void)_setDrawingStroke:(float)arg1 forState:(unsigned int)arg2;
- (void)_setDrawingStyle:(int)arg1 forState:(unsigned int)arg2;
- (void)_setExternalFlatEdge:(unsigned int)arg1;
- (void)_setFont:(id)arg1;
- (void)_setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 deferLayout:(BOOL)arg2;
- (void)_setHighlighted:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_setImage:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setImageColor:(id)arg1 forState:(unsigned int)arg2;
- (void)_setImageColor:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setInternalTitlePaddingInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)_setLetterpressStyle:(id)arg1 forState:(unsigned int)arg2;
- (void)_setLineBreakMode:(int)arg1;
- (void)_setShadowColor:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setShouldHandleScrollerMouseEvent:(BOOL)arg1;
- (void)_setTitle:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setTitleColor:(id)arg1 forStates:(unsigned int)arg2;
- (void)_setTitleFrozen:(BOOL)arg1;
- (void)_setTitleShadowOffset:(struct CGSize { float x1; float x2; })arg1;
- (void)_setVisualEffectViewEnabled:(BOOL)arg1 backgroundColor:(id)arg2;
- (void)_setWantsAccessibilityUnderline:(BOOL)arg1;
- (id)_setupBackgroundView;
- (void)_setupDrawingStyleForState:(unsigned int)arg1;
- (void)_setupImageView;
- (void)_setupPressednessForState:(unsigned int)arg1;
- (void)_setupTitleView;
- (void)_setupTitleViewRequestingLayout:(BOOL)arg1;
- (id)_shadowColorForState:(unsigned int)arg1;
- (BOOL)_shouldDefaultToTemplatesForImageViewBackground:(BOOL)arg1;
- (BOOL)_shouldHaveFloatingAppearance;
- (BOOL)_shouldSkipNormalLayoutForSakeOfTemplateLayout;
- (BOOL)_shouldUpdatePressedness;
- (void)_takeContentFromArchivableContent:(id)arg1;
- (BOOL)_textNeedsCompositingModeWhenSelected;
- (void)_titleAttributesChanged;
- (id)_titleColorForState:(unsigned int)arg1;
- (id)_titleForState:(unsigned int)arg1;
- (id)_titleOrImageViewForBaselineLayout;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_titleRectForContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 calculatePositionForEmptyTitle:(BOOL)arg2;
- (struct CGSize { float x1; float x2; })_titleShadowOffset;
- (id)_titleView;
- (id)_transitionAnimationWithKeyPath:(id)arg1;
- (void)_uninstallSelectGestureRecognizer;
- (void)_updateBackgroundImageView;
- (void)_updateContentBackdropView;
- (void)_updateEffectsForImageView:(id)arg1 background:(BOOL)arg2;
- (void)_updateImageView;
- (void)_updateMaskState;
- (void)_updateSelectionViewForState:(unsigned int)arg1;
- (void)_updateTitleView;
- (BOOL)_visualEffectViewEnabled;
- (BOOL)_wantsAccessibilityUnderline;
- (BOOL)_wantsContentBackdropView;
- (void)_willMoveToWindow:(id)arg1;
- (BOOL)adjustsImageWhenDisabled;
- (BOOL)adjustsImageWhenHighlighted;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })alignmentRectInsets;
- (id)attributedTitleForState:(unsigned int)arg1;
- (BOOL)autosizesToFit;
- (id)backgroundImageForState:(unsigned int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })backgroundRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (int)buttonType;
- (BOOL)canBecomeFocused;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })contentEdgeInsets;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)crossfadeToImage:(id)arg1 forState:(unsigned int)arg2;
- (id)currentAttributedTitle;
- (id)currentBackgroundImage;
- (id)currentImage;
- (id)currentTitle;
- (id)currentTitleColor;
- (id)currentTitleShadowColor;
- (void)dealloc;
- (unsigned long long)defaultAccessibilityTraits;
- (void)encodeWithCoder:(id)arg1;
- (void)floatingContentView:(id)arg1 isTransitioningFromState:(unsigned int)arg2 toState:(unsigned int)arg3;
- (id)font;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (id)image;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })imageEdgeInsets;
- (id)imageForState:(unsigned int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })imageRectForContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)imageView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)interactionTintColorDidChange;
- (void)invalidateIntrinsicContentSize;
- (BOOL)isAccessibilityElementByDefault;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (void)layoutSubviews;
- (int)lineBreakMode;
- (struct CGPoint { float x1; float x2; })pressFeedbackPosition;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (BOOL)reversesTitleShadowWhenHighlighted;
- (void)setAdjustsImageWhenDisabled:(BOOL)arg1;
- (void)setAdjustsImageWhenHighlighted:(BOOL)arg1;
- (void)setAttributedTitle:(id)arg1 forState:(unsigned int)arg2;
- (void)setAutosizesToFit:(BOOL)arg1;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned int)arg2;
- (void)setBackgroundImage:(id)arg1 forStates:(unsigned int)arg2;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setContentEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setContentHorizontalAlignment:(int)arg1;
- (void)setContentVerticalAlignment:(int)arg1;
- (void)setDisabledDimsImage:(BOOL)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setFont:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setHighlighted:(BOOL)arg1;
- (void)setImage:(id)arg1 forState:(unsigned int)arg2;
- (void)setImage:(id)arg1 forStates:(unsigned int)arg2;
- (void)setImageEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setLineBreakMode:(int)arg1;
- (void)setReversesTitleShadowWhenHighlighted:(BOOL)arg1;
- (void)setSelected:(BOOL)arg1;
- (void)setSemanticContentAttribute:(int)arg1;
- (void)setShowPressFeedback:(BOOL)arg1;
- (void)setShowsTouchWhenHighlighted:(BOOL)arg1;
- (void)setTintColor:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitle:(id)arg1 forState:(unsigned int)arg2;
- (void)setTitle:(id)arg1 forStates:(unsigned int)arg2;
- (void)setTitleColor:(id)arg1 forState:(unsigned int)arg2;
- (void)setTitleColor:(id)arg1 forStates:(unsigned int)arg2;
- (void)setTitleEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setTitleShadowColor:(id)arg1 forState:(unsigned int)arg2;
- (void)setTitleShadowColor:(id)arg1 forStates:(unsigned int)arg2;
- (void)setTitleShadowOffset:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)showsTouchWhenHighlighted;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)tintColorDidChange;
- (id)title;
- (id)titleColorForState:(unsigned int)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })titleEdgeInsets;
- (id)titleForState:(unsigned int)arg1;
- (id)titleLabel;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })titleRectForContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)titleShadowColorForState:(unsigned int)arg1;
- (struct CGSize { float x1; float x2; })titleShadowOffset;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateConstraints;
- (id)viewForLastBaselineLayout;

// Image: /System/Library/Frameworks/AddressBookUI.framework/AddressBookUI

- (void)ab_addConferenceIcon;

// Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI

- (id)ab_text;
- (id)ab_textAttributes;
- (void)setAb_text:(id)arg1;
- (void)setAb_textAttributes:(id)arg1;

// Image: /System/Library/Frameworks/MapKit.framework/MapKit

- (id)_mapkit_accessoryControlToExtendWithCallout;

// Image: /System/Library/Frameworks/PassKit.framework/PassKit

- (void)pk_applyAppearance:(struct _PKAppearanceSpecifier { BOOL x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; id x23; struct x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; int *x34; unsigned long long x35; void*x36; void*x37; long doublex38; inout void*x39; void*x40; void*x41; double x42; void*x43; float x44; float x45; void*x46; BOOL x47; void*x48; void*x49; const out double x50; void*x51; BOOL x52; void*x53; int x54; out in void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; int x77; void*x78; void*x79; unsigned short x80; void*x81; short x82; void*x83; void*x84; void*x85; void*x86; unsigned long x87; int x88; unsigned int x89/* : ? */; const void*x90; const void*x91; void*x92; void*x93; const int x94; void x95; void*x96; void*x97; void*x98; void*x99; const void*x100; void*x101; void*x102; void*x103; out const void*x104; short x105; void*x106; unsigned char x107; out const void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; long doublex114; void*x115; float x116; int x117; in int x118; void*x119; int x120; out in void*x121; float x122; const void*x123; void*x124; void*x125; void*x126; out const void*x127; void*x128; unsigned char x129; out const void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; long doublex136; void*x137; float x138; int x139; in int x140; void*x141; int x142; out in void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; long long x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; SEL x182; void*x183; void*x184; void*x185; void*x186; void*x187; unsigned char x188; void*x189; void*x190; const void*x191; void*x192; void*x193; const void*x194; void*x195; void*x196; unsigned int x197; in double x198; int x199; BOOL x200; void*x201; void*x202; out const oneway int x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; float x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; SEL x254; void*x255; void*x256; void*x257; void*x258; void*x259; unsigned char x260; void*x261; void*x262; const void*x263; void*x264; void*x265; const void*x266; void*x267; void*x268; unsigned int x269; in double x270; int x271; BOOL x272; void*x273; void*x274; out const oneway int x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; unsigned char x292; void*x293; int x294; void*x295; bycopy void*x296; float x297; long long x298; void*x299; void*x300; void*x301; void*x302; int x303; double x304; void*x305; void*x306; void*x307; unsigned char x308; out in void*x309; void*x310; in void*x311; unsigned char x312; out long x313; out const unsigned char x314; void*x315; unsigned int x316/* : ? */; void*x317; void*x318; int x319; long x320; void*x321; void*x322; const void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; BOOL x337; const void*x338; void*x339; unsigned short x340; void*x341; short x342; void*x343; void*x344; void*x345; void*x346; unsigned long x347; int x348; unsigned int x349/* : ? */; const void*x350; const void*x351; void*x352; void*x353; const int x354; void x355; void*x356; void*x357; void*x358; void*x359; const void*x360; void*x361; void*x362; void*x363; out const void*x364; short x365; void*x366; unsigned short x367; long x368; int x369; double x370; void*x371; short x372; void*x373; out void*x374; void*x375; int x376; void*x377; void*x378; float x379; const void*x380; void*x381; void*x382; void*x383; out const void*x384; void*x385; void*x386; const void*x387; void*x388; void*x389; void*x390; out const void*x391; short x392; void*x393; bycopy void*x394; void*x395; short x396; void*x397; int x398; void*x399; void*x400; float x401; const void*x402; void*x403; void*x404; void*x405; out const void*x406; void*x407; bycopy void*x408; void*x409; short x410; void*x411; int x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; long long x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; SEL x459; void*x460; void*x461; void*x462; void*x463; void*x464; inout unsigned short x465; unsigned char x466; out void*x467; void*x468; int x469; in void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; SEL x488; void*x489; void*x490; void*x491; void*x492; void*x493; inout unsigned short x494; unsigned short x495; unsigned long long x496; unsigned long x497; int x498; void*x499; void*x500; unsigned int x501; in void*x502; long x503; void*x504; BOOL x505; void*x506; void*x507; int x508; void*x509; const void*x510; void*x511; int x512; out in void*x513; void*x514; in void*x515; void*x516; void*x517; const void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; SEL x529; void*x530; void*x531; void*x532; void*x533; void*x534; inout unsigned short x535; unsigned short x536; unsigned long long x537; unsigned long x538; int x539; void*x540; void*x541; unsigned int x542; in void*x543; long x544; void*x545; BOOL x546; void*x547; void*x548; int x549; void*x550; const void*x551; void*x552; int x553; out in void*x554; void*x555; in void*x556; void*x557; void*x558; const void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; SEL x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; unsigned long long x606; void*x607; void*x608; long doublex609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; long long x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; int x653; void*x654; void*x655; unsigned char x656; inout unsigned long x657; void*x658; void x659; void*x660; long x661; bycopy float x662; long doublex663; void*x664; void*x665; void*x666; int x667; long x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; long long x682; void*x683; void*x684; unsigned short x685; void*x686; short x687; void*x688; void*x689; void*x690; void*x691; unsigned long x692; int x693; unsigned int x694/* : ? */; const void*x695; const void*x696; void*x697; void*x698; const void*x699; void*x700; void*x701; void*x702; out const void*x703; short x704; void*x705; unsigned short x706; BOOL x707; void*x708; in void*x709; void*x710; int x711; void*x712; void*x713; float x714; const void*x715; void*x716; void*x717; void*x718; out const void*x719; void*x720; unsigned short x721; BOOL x722; void*x723; in void*x724; void*x725; int x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; Class x734; float x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; SEL x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; SEL x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; out bycopy void*x870; void*x871; out bycopy void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; out void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; out short x911; void*x912; void*x913; double x914; void*x915; void*x916; void*x917; void*x918; in void*x919; int x920; BOOL x921; void*x922; void*x923; void*x924; oneway int x925; void*x926; void*x927; unsigned char x928; out in void*x929; const out long x930; long x931; void*x932; const void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; void*x943; float x944; void*x945; void*x946; unsigned short x947; void*x948; short x949; void*x950; void*x951; void*x952; void*x953; unsigned long x954; int x955; unsigned int x956/* : ? */; const void*x957; const void*x958; void*x959; void*x960; const int x961; void x962; void*x963; void*x964; void*x965; void*x966; const void*x967; void*x968; void*x969; void*x970; out const void*x971; short x972; void*x973; void*x974; void*x975; void*x976; void*x977; unsigned char x978; void*x979; in void*x980; void*x981; const void*x982; unsigned int x983; void*x984; float x985; const void*x986; void*x987; void*x988; void*x989; out const void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; unsigned char x996; void*x997; in void*x998; void*x999; const void*x1000; unsigned int x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; unsigned int x1008/* : ? */; void*x1009; long long x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; SEL x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; in void*x1048; void*x1049; long x1050; out void*x1051; void*x1052; void*x1053; const void*x1054; BOOL x1055; void*x1056; void*x1057; const void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; bool x1068; float x1069; void*x1070; void*x1071; void*x1072; unsigned short x1073; bycopy unsigned int x1074/* : ? */; short x1075; void*x1076; const void x1077; void*x1078; void*x1079; int x1080; out in void*x1081; const void*x1082; in short x1083; float x1084; out const void*x1085; void*x1086; const void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; out void*x1108; void*x1109; void*x1110; unsigned long x1111; void*x1112; void*x1113; unsigned int x1114; long doublex1115; unsigned int x1116; BOOL x1117; BOOL x1118; void*x1119; short x1120; short x1121; out const void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; const void*x1136; void*x1137; void*x1138; void*x1139; unsigned short x1140; void*x1141; void*x1142; unsigned int x1143; unsigned short x1144; void*x1145; out const void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; oneway int x1151; void*x1152; void*x1153; unsigned char x1154; out in void*x1155; const out long x1156; long x1157; void*x1158; const void*x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; void*x1173; void*x1174; void*x1175; void*x1176; void*x1177; void*x1178; unsigned char x1179; bool x1180; void*x1181; in double x1182; long x1183; void*x1184; unsigned long x1185; out out void*x1186; void*x1187; void*x1188; unsigned char x1189; long x1190; void*x1191; short x1192; short x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; long long x1204; void*x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; void*x1212; void*x1213; void*x1214; void*x1215; void*x1216; void*x1217; void*x1218; void*x1219; void*x1220; void*x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void* x1235[ /* ? */ ]; void*x1236; void*x1237; void*x1238; void*x1239; double x1240; int x1241; out in double x1242; unsigned short x1243; void*x1244; unsigned int x1245/* : ? */; void*x1246; int x1247; void*x1248; long x1249; void*x1250; short x1251; unsigned char x1252; out in void*x1253; const out long x1254; long x1255; void*x1256; const void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; void* x1270[ /* ? */ ]; void*x1271; unsigned short x1272; void*x1273; short x1274; void*x1275; void*x1276; void*x1277; void*x1278; unsigned long x1279; int x1280; unsigned int x1281/* : ? */; const void*x1282; const void*x1283; void*x1284; void*x1285; const void*x1286; void*x1287; void*x1288; void*x1289; out const void*x1290; short x1291; void*x1292; void*x1293; void*x1294; double x1295; int x1296; void*x1297; void*x1298; long x1299; void*x1300; void*x1301; void*x1302; const void*x1303; float x1304; const void*x1305; void*x1306; void*x1307; void*x1308; out const void*x1309; void*x1310; void*x1311; void*x1312; double x1313; int x1314; void*x1315; void*x1316; long x1317; void*x1318; void*x1319; void*x1320; const void*x1321; void*x1322; void*x1323; void*x1324; void*x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; void*x1331; void*x1332; void*x1333; void*x1334; void*x1335; void*x1336; void*x1337; out void*x1338; void*x1339; void*x1340; void*x1341; void*x1342; void*x1343; void*x1344; void*x1345; void*x1346; void*x1347; void*x1348; void*x1349; void*x1350; void*x1351; void*x1352; void*x1353; void*x1354; void*x1355; void*x1356; void*x1357; void*x1358; void*x1359; void*x1360; void*x1361; void*x1362; void*x1363; void*x1364; void*x1365; long long x1366; void*x1367; void*x1368; int x1369; long long x1370; void*x1371; void*x1372; void*x1373; void*x1374; void*x1375; void*x1376; void*x1377; void*x1378; void*x1379; void*x1380; void*x1381; void*x1382; void*x1383; void*x1384; void*x1385; void*x1386; void*x1387; void*x1388; void*x1389; void*x1390; void*x1391; void*x1392; void*x1393; void*x1394; void*x1395; void*x1396; void*x1397; SEL x1398; void*x1399; void*x1400; void*x1401; void*x1402; void*x1403; void*x1404; unsigned short x1405; void*x1406; BOOL x1407; BOOL x1408; void*x1409; short x1410; short x1411; unsigned char x1412; out in void*x1413; const out long x1414; long x1415; void*x1416; const void*x1417; void*x1418; void*x1419; double x1420; void*x1421; int x1422; BOOL x1423; void*x1424; void*x1425; void*x1426; void*x1427; void*x1428; void*x1429; void*x1430; void*x1431; void*x1432; void*x1433; void*x1434; void*x1435; void*x1436; void*x1437; void*x1438; void*x1439; SEL x1440; void*x1441; void*x1442; void*x1443; void*x1444; void*x1445; void*x1446; unsigned short x1447; void*x1448; BOOL x1449; BOOL x1450; void*x1451; short x1452; short x1453; unsigned char x1454; out in void*x1455; const out long x1456; long x1457; void*x1458; const void*x1459; void*x1460; void*x1461; double x1462; void*x1463; int x1464; BOOL x1465; void*x1466; void*x1467; void*x1468; void*x1469; void*x1470; void*x1471; void*x1472; void*x1473; void*x1474; void*x1475; void*x1476; void*x1477; void*x1478; void*x1479; void*x1480; long long x1481; void*x1482; SEL *x1483; int x1484; void*x1485; void*x1486; void*x1487; void*x1488; void*x1489; void*x1490; void*x1491; void*x1492; void*x1493; void*x1494; void*x1495; void*x1496; void*x1497; void*x1498; void*x1499; void*x1500; void*x1501; void*x1502; void*x1503; void*x1504; void*x1505; void*x1506; void*x1507; void*x1508; void*x1509; void*x1510; void*x1511; void*x1512; void*x1513; void*x1514; void*x1515; void*x1516; void*x1517; void*x1518; void*x1519; int x1520; void*x1521; double x1522; void*x1523; char *x1524; void*x1525; void*x1526; void*x1527; void*x1528; SEL x1529; void*x1530; void*x1531; void*x1532; void*x1533; void*x1534; void*x1535; void*x1536; void*x1537; void*x1538; void*x1539; void*x1540; void*x1541; void*x1542; void*x1543; void*x1544; void*x1545; void*x1546; void*x1547; void*x1548; void*x1549; void*x1550; void*x1551; void*x1552; void*x1553; void*x1554; void*x1555; void*x1556; void*x1557; void*x1558; void*x1559; void*x1560; SEL x1561; void*x1562; void*x1563; void*x1564; void*x1565; void*x1566; void*x1567; void*x1568; void*x1569; void*x1570; void*x1571; void*x1572; void*x1573; void*x1574; void*x1575; void*x1576; void*x1577; id x1578; void*x1579; void*x1580; void*x1581; void*x1582; void*x1583; void*x1584; void*x1585; void*x1586; void*x1587; void*x1588; void*x1589; void*x1590; void*x1591; void*x1592; void*x1593; void*x1594; void*x1595; void*x1596; void*x1597; void*x1598; void*x1599; void*x1600; void*x1601; void*x1602; void*x1603; void*x1604; void*x1605; void*x1606; SEL x1607; void*x1608; void*x1609; void*x1610; void*x1611; void*x1612; void*x1613; void*x1614; void*x1615; void*x1616; void*x1617; void*x1618; void*x1619; void*x1620; void*x1621; void*x1622; SEL x1623; void*x1624; void*x1625; void*x1626; void*x1627; void*x1628; unsigned short x1629; void*x1630; void*x1631; in void*x1632; int x1633; void*x1634; void*x1635; void*x1636; void*x1637; void*x1638; void*x1639; void*x1640; void*x1641; void*x1642; void*x1643; void*x1644; void*x1645; void*x1646; void*x1647; void*x1648; void*x1649; void*x1650; void*x1651; void*x1652; void*x1653; void*x1654; void*x1655; void*x1656; long long x1657; long long x1658; void*x1659; void*x1660; void*x1661; void*x1662; void*x1663; void*x1664; void*x1665; void*x1666; void*x1667; void*x1668; void*x1669; void*x1670; void*x1671; void*x1672; void*x1673; void*x1674; void*x1675; void*x1676; void*x1677; void*x1678; void*x1679; void*x1680; void*x1681; void*x1682; void*x1683; void*x1684; void*x1685; SEL x1686; void*x1687; void*x1688; void*x1689; void*x1690; void*x1691; void*x1692; unsigned short x1693; void*x1694; short x1695; void*x1696; void*x1697; void*x1698; void*x1699; unsigned long x1700; int x1701; unsigned int x1702/* : ? */; const void*x1703; const void*x1704; void*x1705; void*x1706; const int x1707; void x1708; void*x1709; void*x1710; void*x1711; void*x1712; const void*x1713; void*x1714; void*x1715; void*x1716; out const void*x1717; short x1718; void*x1719; unsigned int x1720; void*x1721; void*x1722; unsigned long x1723; void*x1724; int x1725; void*x1726; void*x1727; float x1728; const void*x1729; void*x1730; void*x1731; void*x1732; out const void*x1733; void*x1734; unsigned int x1735; void*x1736; void*x1737; unsigned long x1738; void*x1739; int x1740; void*x1741; void*x1742; void*x1743; void*x1744; void*x1745; void*x1746; void*x1747; void*x1748; void*x1749; void*x1750; void*x1751; void*x1752; void*x1753; void*x1754; SEL x1755; void*x1756; void*x1757; void*x1758; void*x1759; void*x1760; void*x1761; void*x1762; void*x1763; void*x1764; void*x1765; void*x1766; void*x1767; void*x1768; void*x1769; void*x1770; void*x1771; void*x1772; void*x1773; void*x1774; void*x1775; short x1776; void*x1777; void*x1778; void*x1779; void*x1780; void*x1781; in void*x1782; out void*x1783; double x1784; void*x1785; void*x1786; void*x1787; void*x1788; void*x1789; short x1790; void*x1791; void*x1792; void*x1793; double x1794; void*x1795; SEL x1796; void*x1797; SEL x1798; void*x1799; void*x1800; void*x1801; void*x1802; void*x1803; void*x1804; void*x1805; SEL x1806; void*x1807; SEL x1808; void*x1809; void*x1810; void*x1811; void*x1812; void*x1813; void*x1814; void*x1815; void*x1816; void*x1817; short x1818; void*x1819; void*x1820; void*x1821; void*x1822; void*x1823; void x1824; void*x1825; void*x1826; void*x1827; long x1828; void*x1829; void*x1830; void*x1831; void*x1832; void*x1833; void*x1834; void*x1835; void*x1836; void*x1837; void*x1838; void*x1839; void*x1840; void*x1841; void*x1842; void*x1843; void*x1844; void*x1845; short x1846; void*x1847; void*x1848; void*x1849; double x1850; void*x1851; SEL x1852; void*x1853; SEL x1854; void*x1855; void*x1856; void*x1857; void*x1858; void*x1859; void*x1860; void*x1861; SEL x1862; void*x1863; SEL x1864; void*x1865; void*x1866; void*x1867; void*x1868; void*x1869; int x1870; void*x1871; const void*x1872; void*x1873; void*x1874; void*x1875; void*x1876; in void*x1877; short x1878; void*x1879; int x1880; void*x1881; void*x1882; void*x1883; in void*x1884; void*x1885; void*x1886; double x1887; void*x1888; void*x1889; void*x1890; long x1891; void*x1892; out void*x1893; in void*x1894; void*x1895; void*x1896; void*x1897; void*x1898; long x1899; void*x1900; out void*x1901; in void*x1902; void*x1903; void*x1904; void*x1905; void*x1906; void*x1907; void*x1908; unsigned int x1909/* : ? */; void*x1910; out void*x1911; out void*x1912; long x1913; void*x1914; void*x1915; void*x1916; void*x1917; void*x1918; void*x1919; void*x1920; void*x1921; void*x1922; void*x1923; void*x1924; SEL x1925; void*x1926; SEL x1927; void*x1928; void*x1929; void*x1930; int x1931; void*x1932; void*x1933; void*x1934; void*x1935; void*x1936; double x1937; void*x1938; void*x1939; void*x1940; out void*x1941; int x1942; void*x1943; in void*x1944; void*x1945; void*x1946; oneway void*x1947; void*x1948; void*x1949; BOOL x1950; void*x1951; void*x1952; void*x1953; out void*x1954; const void*x1955; void*x1956; void*x1957; void*x1958; void*x1959; int x1960; void*x1961; in void*x1962; void*x1963; void*x1964; void*x1965; void*x1966; void*x1967; void*x1968; void*x1969; void*x1970; void*x1971; void*x1972; void*x1973; void*x1974; void*x1975; void*x1976; void*x1977; void*x1978; void*x1979; void*x1980; void*x1981; void*x1982; void*x1983; void*x1984; void*x1985; void*x1986; void x1987; void*x1988; out void*x1989; int x1990; void*x1991; double x1992; void*x1993; void*x1994; void*x1995; char *x1996; void*x1997; void*x1998; void*x1999; void*x2000; void*x2001; struct x2002; void*x2003; }*)arg1;
- (id)pk_childrenForAppearance;

// Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI

- (void)pu_setRTLAwareContentEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)pu_setTitle:(id)arg1 withFallback:(id /* block */)arg2 forState:(unsigned int)arg3;

// Image: /System/Library/PrivateFrameworks/CameraKit.framework/CameraKit

- (void)cam_updateContentInsetsToCenterImageWithinMinimumSize:(struct CGSize { float x1; float x2; })arg1;

// Image: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation

- (void)mpu_configureButtonWithTextDrawingContext:(id)arg1;

// Image: /System/Library/PrivateFrameworks/MediaPlayerUI.framework/MediaPlayerUI

+ (id)mediaControlsBuyButtonWithStyle:(int)arg1;

- (void)_mediaControlsBuyButtonTouchDown:(id)arg1;
- (void)_mediaControlsBuyButtonTouchUp:(id)arg1;

// Image: /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI

- (void)configureFromScriptButton:(id)arg1;

@end
