/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSWPRenderer : NSObject {
    struct CGContext { } * _context;
    BOOL  _flipShadows;
    TSUBezierPath * _interiorClippingPath;
    float  _viewScale;
}

@property (nonatomic) BOOL flipShadows;
@property (nonatomic, retain) TSUBezierPath *interiorClippingPath;
@property (nonatomic) float viewScale;

+ (struct __CTFont { }*)invisiblesFont;

- (struct CGSize { float x1; float x2; })convertSizeToDeviceSpace:(struct CGSize { float x1; float x2; })arg1;
- (void)dealloc;
- (void)didRenderFragments;
- (void)drawAdornmentRects:(const struct vector<TSWPAdornmentRect, std::__1::allocator<TSWPAdornmentRect> > { struct TSWPAdornmentRect {} *x1; struct TSWPAdornmentRect {} *x2; struct __compressed_pair<TSWPAdornmentRect *, std::__1::allocator<TSWPAdornmentRect> > { struct TSWPAdornmentRect {} *x_3_1_1; } x3; }*)arg1 forColumn:(id)arg2 foreground:(bool)arg3;
- (void)drawFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg1 updateRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 drawingState:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg3 runState:(struct { struct _NSRange { unsigned int x_1_1_1; unsigned int x_1_1_2; } x1; id x2; /* Warning: unhandled array encoding: '[3@]I^{TSWPDrawingState}@@@^{__CTFont}^{CGColor}@cif^{CGColor}f}' */ id x3[3]; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; SEL x11; void*x12; void*x13; void*x14; void*x15; void*x16; unsigned int x17; unsigned char x18; unsigned short x19; void*x20; void*x21; void*x22; BOOL x23; void*x24; void*x25; void*x26; in void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; double x38; }*)arg4 lineDrawFlags:(unsigned int)arg5;
- (BOOL)flipShadows;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })getClipBoundingBox;
- (id)initWithContext:(struct CGContext { }*)arg1;
- (id)interiorClippingPath;
- (void)p_calculateMarkAdornments:(struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine {} *x1; struct TSWPAdornmentLine {} *x2; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine {} *x_3_1_1; } x3; }*)arg1 drawingState:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg2 lineFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg3;
- (BOOL)p_canvasSelectionIncludesDrawableOfAttachmentAtCharIndex:(unsigned int)arg1 state:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg2;
- (void)p_drawAdornmentGlyphs:(const struct TSWPAdornments { int x1; int x2; float x3; struct CGColor {} *x4; struct __CTFont {} *x5; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *x_6_1_1; unsigned int *x_6_1_2; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *x_3_2_1; } x_6_1_3; } x6; struct vector<unsigned short, std::__1::allocator<unsigned short> > { unsigned short *x_7_1_1; unsigned short *x_7_1_2; struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short> > { unsigned short *x_3_2_1; } x_7_1_3; } x7; struct vector<CGRect, std::__1::allocator<CGRect> > { struct CGRect {} *x_8_1_1; struct CGRect {} *x_8_1_2; struct __compressed_pair<CGRect *, std::__1::allocator<CGRect> > { struct CGRect {} *x_3_2_1; } x_8_1_3; } x8; struct vector<CGPoint, std::__1::allocator<CGPoint> > { struct CGPoint {} *x_9_1_1; struct CGPoint {} *x_9_1_2; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint> > { struct CGPoint {} *x_3_2_1; } x_9_1_3; } x9; struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition> > { struct { /* ? */ } *x_10_1_1; struct { /* ? */ } *x_10_1_2; struct __compressed_pair<TSWPAttachmentPosition *, std::__1::allocator<TSWPAttachmentPosition> > { struct { /* ? */ } *x_3_2_1; } x_10_1_3; } x10; float x11; float x12; float x13; struct CGPoint { float x_14_1_1; float x_14_1_2; } x14; bool x15; }*)arg1 lineFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg2 state:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg3;
- (void)p_drawAdornmentLine:(const struct TSWPAdornmentLine { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; float x2; struct CGColor {} *x3; float x4; unsigned int x5; int x6; int x7; float x8; bool x9; id x10; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; SEL x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; unsigned long x25; int x26; in void*x27; void*x28; double x29; unsigned long x30; int x31; short x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; SEL x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; unsigned short x55; void*x56; short x57; void*x58; void*x59; void*x60; void*x61; unsigned long x62; int x63; unsigned int x64/* : ? */; const void*x65; const void*x66; void*x67; void*x68; const int x69; void x70; void*x71; void*x72; void*x73; void*x74; const void*x75; void*x76; void*x77; void*x78; out const void*x79; short x80; void*x81; void*x82; void*x83; void*x84; void*x85; unsigned char x86; void*x87; in void*x88; void*x89; const void*x90; out void*x91; in double x92; void*x93; void*x94; int x95; out in void*x96; float x97; const void*x98; void*x99; void*x100; void*x101; out const void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; unsigned char x108; void*x109; in void*x110; void*x111; const void*x112; out void*x113; in double x114; void*x115; void*x116; int x117; out in void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; out void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; long long x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; double x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; SEL x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; long long x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; SEL x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; unsigned long x305; void*x306; unsigned int x307/* : ? */; void*x308; long x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; double x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; id x384; void*x385; void*x386; void*x387; void*x388; id x389; id x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; long long x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; double x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; SEL x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; long long x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; SEL x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; double x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; id x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; id x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; SEL x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; SEL x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; unsigned long x650; void*x651; unsigned int x652/* : ? */; void*x653; long x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; const void*x673; void*x674; void*x675; void*x676; long long x677; void*x678; void*x679; id x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; unsigned int x705/* : ? */; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; SEL x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; id x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; in void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; SEL x766; void*x767; void*x768; void*x769; void*x770; void*x771; unsigned char x772; void*x773; unsigned int x774; unsigned char x775; out void*x776; void*x777; out in short x778; short x779; void*x780; void*x781; unsigned short x782; void*x783; out const void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; id x799; void*x800; void*x801; id x802; void*x803; void*x804; id x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; }*)arg1 drawingState:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg2 lineFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg3 lineFragmentStart:(struct CGPoint { float x1; float x2; })arg4 vertical:(BOOL)arg5;
- (void)p_drawAdornmentLineBackgroundRect:(const struct TSWPAdornmentLine { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; float x2; struct CGColor {} *x3; float x4; unsigned int x5; int x6; int x7; float x8; bool x9; id x10; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; SEL x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; unsigned short x24; void*x25; short x26; void*x27; void*x28; void*x29; void*x30; unsigned long x31; int x32; unsigned int x33/* : ? */; const void*x34; const void*x35; void*x36; void*x37; const int x38; void x39; void*x40; void*x41; void*x42; void*x43; const void*x44; void*x45; void*x46; void*x47; out const void*x48; short x49; void*x50; unsigned char x51; out const void*x52; void*x53; void*x54; double x55; int x56; void*x57; unsigned short x58; void*x59; const void*x60; void*x61; void*x62; void*x63; float x64; const void*x65; void*x66; void*x67; void*x68; out const void*x69; void*x70; unsigned char x71; out const void*x72; void*x73; void*x74; double x75; int x76; void*x77; unsigned short x78; void*x79; const void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; const void*x97; void*x98; void*x99; long long x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; double x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; long long x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; long long x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; SEL x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; struct x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; unsigned int x246/* : ? */; long long x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; const void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; SEL x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; unsigned int x302; void*x303; long doublex304; void*x305; void*x306; int x307; void*x308; void*x309; long x310; int x311; void*x312; void*x313; void*x314; void*x315; in out void*x316; void*x317; void*x318; int x319; out in void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; SEL x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; unsigned int x345; void*x346; long doublex347; void*x348; void*x349; int x350; void*x351; void*x352; long x353; int x354; void*x355; void*x356; void*x357; void*x358; in out void*x359; void*x360; void*x361; int x362; out in void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; SEL x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; unsigned short x388; void*x389; short x390; void*x391; void*x392; void*x393; void*x394; unsigned long x395; int x396; unsigned int x397/* : ? */; const void*x398; const void*x399; void*x400; void*x401; const int x402; void x403; void*x404; void*x405; void*x406; void*x407; const void*x408; void*x409; void*x410; void*x411; out const void*x412; short x413; void*x414; unsigned char x415; out const void*x416; void*x417; long doublex418; void*x419; void*x420; float x421; const void*x422; void*x423; void*x424; void*x425; out const void*x426; void*x427; unsigned char x428; out const void*x429; void*x430; long doublex431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; SEL x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; long long x479; void*x480; void*x481; void*x482; float x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; SEL x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; struct x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; SEL x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; in void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; SEL x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; unsigned short x580; void*x581; short x582; void*x583; void*x584; void*x585; void*x586; unsigned long x587; int x588; unsigned int x589/* : ? */; const void*x590; const void*x591; void*x592; void*x593; const int x594; void x595; void*x596; void*x597; void*x598; void*x599; const void*x600; void*x601; void*x602; void*x603; out const void*x604; short x605; void*x606; void*x607; void*x608; unsigned int x609/* : ? */; unsigned char x610; out const void*x611; void*x612; float x613; const void*x614; void*x615; void*x616; void*x617; out const void*x618; void*x619; void*x620; void*x621; unsigned int x622/* : ? */; unsigned char x623; out const void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; SEL x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; SEL x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; long long x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; SEL x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; long doublex712; unsigned short x713; unsigned long long x714; unsigned long x715; int x716; void*x717; void*x718; void*x719; int x720; void*x721; const void*x722; void*x723; int x724; out in unsigned short x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; struct x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; SEL x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; long doublex764; unsigned short x765; unsigned long long x766; unsigned long x767; int x768; void*x769; void*x770; void*x771; int x772; void*x773; const void*x774; void*x775; int x776; out in unsigned short x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; SEL x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; SEL x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; unsigned short x888; void*x889; short x890; void*x891; void*x892; void*x893; void*x894; unsigned long x895; int x896; unsigned int x897/* : ? */; const void*x898; const void*x899; void*x900; void*x901; const int x902; void x903; void*x904; void*x905; void*x906; void*x907; const void*x908; void*x909; void*x910; void*x911; out const void*x912; short x913; void*x914; void*x915; int x916; in double x917; void*x918; void*x919; long doublex920; void*x921; void x922; int x923; BOOL x924; void*x925; void*x926; float x927; const void*x928; void*x929; void*x930; void*x931; out const void*x932; void*x933; void*x934; int x935; in double x936; void*x937; void*x938; long doublex939; void*x940; void x941; int x942; BOOL x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; SEL x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; SEL x982; void*x983; void*x984; void*x985; void*x986; void*x987; inout void*x988; void*x989; out long x990; int x991; BOOL x992; void*x993; unsigned char x994; out in double x995; int x996; void*x997; int x998; out in void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; bool x1014; void*x1015; void*x1016; void*x1017; bool x1018; void*x1019; void*x1020; void*x1021; unsigned char x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; short x1037; void*x1038; void*x1039; void*x1040; const void*x1041; void*x1042; void*x1043; BOOL x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; unsigned short x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; void*x1058; void*x1059; unsigned int x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; BOOL x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; in void*x1077; void*x1078; void*x1079; long doublex1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; struct x1090; void*x1091; }*)arg1 lineDrawFlags:(unsigned int)arg2 drawingState:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg3 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4;
- (void)p_drawAdornments:(const struct TSWPAdornments { int x1; int x2; float x3; struct CGColor {} *x4; struct __CTFont {} *x5; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *x_6_1_1; unsigned int *x_6_1_2; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *x_3_2_1; } x_6_1_3; } x6; struct vector<unsigned short, std::__1::allocator<unsigned short> > { unsigned short *x_7_1_1; unsigned short *x_7_1_2; struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short> > { unsigned short *x_3_2_1; } x_7_1_3; } x7; struct vector<CGRect, std::__1::allocator<CGRect> > { struct CGRect {} *x_8_1_1; struct CGRect {} *x_8_1_2; struct __compressed_pair<CGRect *, std::__1::allocator<CGRect> > { struct CGRect {} *x_3_2_1; } x_8_1_3; } x8; struct vector<CGPoint, std::__1::allocator<CGPoint> > { struct CGPoint {} *x_9_1_1; struct CGPoint {} *x_9_1_2; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint> > { struct CGPoint {} *x_3_2_1; } x_9_1_3; } x9; struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition> > { struct { /* ? */ } *x_10_1_1; struct { /* ? */ } *x_10_1_2; struct __compressed_pair<TSWPAttachmentPosition *, std::__1::allocator<TSWPAttachmentPosition> > { struct { /* ? */ } *x_3_2_1; } x_10_1_3; } x10; float x11; float x12; float x13; struct CGPoint { float x_14_1_1; float x_14_1_2; } x14; bool x15; }*)arg1 lineFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg2 state:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg3;
- (void)p_drawAttachmentAdornments:(const struct TSWPAdornments { int x1; int x2; float x3; struct CGColor {} *x4; struct __CTFont {} *x5; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *x_6_1_1; unsigned int *x_6_1_2; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *x_3_2_1; } x_6_1_3; } x6; struct vector<unsigned short, std::__1::allocator<unsigned short> > { unsigned short *x_7_1_1; unsigned short *x_7_1_2; struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short> > { unsigned short *x_3_2_1; } x_7_1_3; } x7; struct vector<CGRect, std::__1::allocator<CGRect> > { struct CGRect {} *x_8_1_1; struct CGRect {} *x_8_1_2; struct __compressed_pair<CGRect *, std::__1::allocator<CGRect> > { struct CGRect {} *x_3_2_1; } x_8_1_3; } x8; struct vector<CGPoint, std::__1::allocator<CGPoint> > { struct CGPoint {} *x_9_1_1; struct CGPoint {} *x_9_1_2; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint> > { struct CGPoint {} *x_3_2_1; } x_9_1_3; } x9; struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition> > { struct { /* ? */ } *x_10_1_1; struct { /* ? */ } *x_10_1_2; struct __compressed_pair<TSWPAttachmentPosition *, std::__1::allocator<TSWPAttachmentPosition> > { struct { /* ? */ } *x_3_2_1; } x_10_1_3; } x10; float x11; float x12; float x13; struct CGPoint { float x_14_1_1; float x_14_1_2; } x14; bool x15; }*)arg1 lineFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg2 state:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg3;
- (void)p_drawAttachmentGlyphAtPosition:(struct { unsigned int x1; float x2; })arg1 fragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg2;
- (void)p_drawAutocorrectionMarkingsFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg1 drawingState:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg2;
- (void)p_drawDictationMarkingsFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg1 drawingState:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg2;
- (void)p_drawHiddenDeletionsAdornments:(const struct TSWPAdornments { int x1; int x2; float x3; struct CGColor {} *x4; struct __CTFont {} *x5; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *x_6_1_1; unsigned int *x_6_1_2; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *x_3_2_1; } x_6_1_3; } x6; struct vector<unsigned short, std::__1::allocator<unsigned short> > { unsigned short *x_7_1_1; unsigned short *x_7_1_2; struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short> > { unsigned short *x_3_2_1; } x_7_1_3; } x7; struct vector<CGRect, std::__1::allocator<CGRect> > { struct CGRect {} *x_8_1_1; struct CGRect {} *x_8_1_2; struct __compressed_pair<CGRect *, std::__1::allocator<CGRect> > { struct CGRect {} *x_3_2_1; } x_8_1_3; } x8; struct vector<CGPoint, std::__1::allocator<CGPoint> > { struct CGPoint {} *x_9_1_1; struct CGPoint {} *x_9_1_2; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint> > { struct CGPoint {} *x_3_2_1; } x_9_1_3; } x9; struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition> > { struct { /* ? */ } *x_10_1_1; struct { /* ? */ } *x_10_1_2; struct __compressed_pair<TSWPAttachmentPosition *, std::__1::allocator<TSWPAttachmentPosition> > { struct { /* ? */ } *x_3_2_1; } x_10_1_3; } x10; float x11; float x12; float x13; struct CGPoint { float x_14_1_1; float x_14_1_2; } x14; bool x15; }*)arg1 lineFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg2 state:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg3;
- (void)p_drawInvisiblesAdornments:(const struct TSWPAdornments { int x1; int x2; float x3; struct CGColor {} *x4; struct __CTFont {} *x5; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *x_6_1_1; unsigned int *x_6_1_2; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *x_3_2_1; } x_6_1_3; } x6; struct vector<unsigned short, std::__1::allocator<unsigned short> > { unsigned short *x_7_1_1; unsigned short *x_7_1_2; struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short> > { unsigned short *x_3_2_1; } x_7_1_3; } x7; struct vector<CGRect, std::__1::allocator<CGRect> > { struct CGRect {} *x_8_1_1; struct CGRect {} *x_8_1_2; struct __compressed_pair<CGRect *, std::__1::allocator<CGRect> > { struct CGRect {} *x_3_2_1; } x_8_1_3; } x8; struct vector<CGPoint, std::__1::allocator<CGPoint> > { struct CGPoint {} *x_9_1_1; struct CGPoint {} *x_9_1_2; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint> > { struct CGPoint {} *x_3_2_1; } x_9_1_3; } x9; struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition> > { struct { /* ? */ } *x_10_1_1; struct { /* ? */ } *x_10_1_2; struct __compressed_pair<TSWPAttachmentPosition *, std::__1::allocator<TSWPAttachmentPosition> > { struct { /* ? */ } *x_3_2_1; } x_10_1_3; } x10; float x11; float x12; float x13; struct CGPoint { float x_14_1_1; float x_14_1_2; } x14; bool x15; }*)arg1 lineFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg2 state:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg3;
- (void)p_drawInvisiblesBreakLine:(const struct TSWPAdornmentLine { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; float x2; struct CGColor {} *x3; float x4; unsigned int x5; int x6; int x7; float x8; bool x9; id x10; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; SEL x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; unsigned short x24; void*x25; short x26; void*x27; void*x28; void*x29; void*x30; unsigned long x31; int x32; unsigned int x33/* : ? */; const void*x34; const void*x35; void*x36; void*x37; const int x38; void x39; void*x40; void*x41; void*x42; void*x43; const void*x44; void*x45; void*x46; void*x47; out const void*x48; short x49; void*x50; unsigned short x51; long x52; int x53; double x54; void*x55; short x56; void*x57; out void*x58; void*x59; int x60; void*x61; void*x62; float x63; const void*x64; void*x65; void*x66; void*x67; out const void*x68; void*x69; void*x70; const void*x71; void*x72; void*x73; void*x74; out const void*x75; short x76; void*x77; bycopy void*x78; void*x79; short x80; void*x81; int x82; void*x83; void*x84; float x85; const void*x86; void*x87; void*x88; void*x89; out const void*x90; void*x91; bycopy void*x92; void*x93; short x94; void*x95; int x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; struct x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; struct x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; long long x157; void*x158; void*x159; void*x160; long long x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; struct x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; long long x188; void*x189; void*x190; long x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; SEL x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; SEL x236; void*x237; void*x238; void*x239; void*x240; unsigned char x241; void*x242; unsigned short x243; void*x244; short x245; void*x246; void*x247; void*x248; void*x249; unsigned long x250; int x251; unsigned int x252/* : ? */; const void*x253; const void*x254; void*x255; void*x256; const int x257; void x258; void*x259; void*x260; void*x261; void*x262; const void*x263; void*x264; void*x265; void*x266; out const void*x267; short x268; void*x269; void*x270; const void*x271; float x272; void*x273; const void*x274; in BOOL x275; void*x276; short x277; void*x278; float x279; const void*x280; void*x281; void*x282; void*x283; out const void*x284; void*x285; void*x286; const void*x287; float x288; void*x289; const void*x290; in BOOL x291; void*x292; short x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void**x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; SEL x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; SEL x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; SEL x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; SEL x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; char *x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; inout void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; SEL x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; BOOL x572; void*x573; unsigned long long x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; SEL x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; unsigned long long x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; BOOL x636; void*x637; unsigned long long x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; SEL x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; short *x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; SEL x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; const void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; SEL x760; void*x761; void*x762; void*x763; void*x764; void*x765; unsigned char x766; void*x767; unsigned short x768; void*x769; int x770; long x771; long x772; unsigned int x773; void*x774; void*x775; void*x776; void*x777; unsigned char x778; void*x779; void*x780; void*x781; void*x782; const void*x783; void*x784; void*x785; short x786; void*x787; long x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; SEL x806; void*x807; void*x808; void*x809; void*x810; void*x811; unsigned char x812; void*x813; unsigned short x814; void*x815; int x816; long x817; long x818; unsigned int x819; void*x820; void*x821; void*x822; void*x823; unsigned char x824; void*x825; void*x826; void*x827; void*x828; const void*x829; void*x830; void*x831; short x832; void*x833; long x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; id x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; char *x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; long x912; void*x913; }*)arg1 lineFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg2 state:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg3;
- (void)p_drawListLabelForFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg1 drawingState:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg2 lineDrawFlags:(unsigned int)arg3;
- (void)p_drawTextInRunsForLine:(struct __CTLine { }*)arg1 fragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg2 state:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg3 tateChuYoko:(BOOL)arg4 baseRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg5 isFirstLineRef:(BOOL)arg6;
- (void)p_drawWordMarkingsForFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg1 color:(id)arg2 ranges:(const struct TSWPRangeVector { struct _NSRange {} *x1; struct _NSRange {} *x2; struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > { struct _NSRange {} *x_3_1_1; } x3; }*)arg3 suppressRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg4 drawingState:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg5;
- (BOOL)p_shouldClipFragment:(const struct TSWPLineFragment { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_6_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_7_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_7_1_2; } x7; struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; float x_8_1_5; float x_8_1_6; float x_8_1_7; } x8; struct TSWPListLabel {} *x9; id x10; void x11; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x12; BOOL x13; void*x14; out const void*x15; void*x16; unsigned short x17; void*x18; void*x19; unsigned long x20; int x21; in void*x22; void*x23; void*x24; float x25; void*x26; void*x27; short x28; void*x29; double x30; SEL x31; SEL x32; void*x33; void*x34; void*x35; SEL x36; SEL x37; void*x38; long x39; long x40; out BOOL x41; void*x42; void*x43; out const void*x44; void*x45; unsigned short x46; void*x47; void*x48; unsigned long x49; int x50; in void*x51; void*x52; void*x53; float x54; void*x55; void*x56; void*x57; void*x58; struct TSWPLineRef {} *x59; struct TSWPLineRef {} *x60; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_61_1_1; } x61; }*)arg1 drawingState:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg2 lineDrawFlags:(unsigned int)arg3 updateRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4 outClipRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg5;
- (void)p_strokeLineFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2 width:(float)arg3;
- (void)p_strokeWavyLineFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2 width:(float)arg3;
- (void)setFlipShadows:(BOOL)arg1;
- (void)setInteriorClippingPath:(id)arg1;
- (void)setViewScale:(float)arg1;
- (float)viewScale;
- (void)willRenderFragmentsWithDrawingState:(const struct TSWPDrawingState { id x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; id x3; unsigned int x4; struct CGColor {} *x5; float x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; struct _NSRange { unsigned int x_15_1_1; unsigned int x_15_1_2; } x15; struct TSWPRangeVector {} *x16; struct TSWPRangeVector {} *x17; struct _NSRange { unsigned int x_18_1_1; unsigned int x_18_1_2; } x18; struct _NSRange { unsigned int x_19_1_1; unsigned int x_19_1_2; } x19; unsigned int x20; struct _NSRange { unsigned int x_21_1_1; unsigned int x_21_1_2; } x21; id x22; }*)arg1;

@end
