/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

@interface LegacyTileLayer : CALayer {
    unsigned int  _paintCount;
    struct LegacyTileGrid { struct LegacyTileCache {} *x1; struct RetainPtr<CALayer> { void *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > >, WTF::IntPointHash, WTF::HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > >::KeyValuePairTraits, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > {} *x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; } * _tileGrid;
}

@property (nonatomic) unsigned int paintCount;
@property (nonatomic) struct LegacyTileGrid { struct LegacyTileCache {} *x1; struct RetainPtr<CALayer> { void *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; /* Warning: unhandled struct encoding: '{HashMap<WebCore::IntPoint' */ struct x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; SEL x19; void*x20; void*x21; void*x22; void*x23; unsigned short x24; void*x25; unsigned short x26; void*x27; short x28; void*x29; void*x30; void*x31; void*x32; unsigned long x33; int x34; unsigned int x35/* : ? */; const void*x36; const void*x37; void*x38; void*x39; const int x40; void x41; void*x42; void*x43; void*x44; void*x45; const void*x46; void*x47; void*x48; void*x49; out const void*x50; short x51; void*x52; void*x53; void*x54; const float x55; out const void*x56; void*x57; in BOOL x58; void*x59; void*x60; void*x61; long x62; void*x63; short x64; int x65; short x66; void*x67; float x68; const void*x69; void*x70; void*x71; void*x72; out const void*x73; void*x74; void*x75; void*x76; const float x77; out const void*x78; void*x79; in BOOL x80; void*x81; void*x82; void*x83; long x84; void*x85; short x86; int x87; short x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; long x95; unsigned long long x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; oneway void*x103; unsigned short x104; BOOL x105; void*x106; long x107; void*x108; double x109; void*x110; void*x111; long x112; long x113; unsigned int x114/* : ? */; void*x115; BOOL x116; void*x117; unsigned short x118; void*x119; int x120; void*x121; long x122; double x123; void*x124; void*x125; void*x126; out const void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; long x139; unsigned long long x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; unsigned short x147; void*x148; short x149; void*x150; void*x151; void*x152; void*x153; unsigned long x154; int x155; unsigned int x156/* : ? */; const void*x157; const void*x158; void*x159; void*x160; const int x161; void x162; void*x163; void*x164; void*x165; void*x166; const void*x167; void*x168; void*x169; void*x170; out const void*x171; short x172; void*x173; oneway void*x174; BOOL x175; void*x176; out const void*x177; int x178; void*x179; void*x180; float x181; const void*x182; void*x183; void*x184; void*x185; out const void*x186; void*x187; oneway void*x188; BOOL x189; void*x190; out const void*x191; int x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; long x204; unsigned long long x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; short x220; void*x221; void*x222; void*x223; void*x224; void*x225; struct x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; BOOL x251; void*x252; void*x253; out char *x254; struct x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; BOOL x264; void*x265; void*x266; void*x267; char *x268; struct x269; void*x270; bool x271; void*x272; void*x273; unsigned int x274/* : ? */; long x275; void*x276; unsigned short x277; void*x278; void*x279; long x280; void*x281; bycopy void x282; void*x283; const const int x284; double x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; unsigned long long x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; unsigned long long x309; void*x310; void*x311; void*x312; void*x313; oneway void*x314; bool x315; void*x316; void*x317; out const void*x318; long doublex319; void*x320; void*x321; void*x322; unsigned char x323; out in void*x324; const out long x325; long x326; void*x327; const void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; long long x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; SEL x381; void*x382; void*x383; void*x384; void*x385; void*x386; bool x387; void*x388; void*x389; const short x390; out in void*x391; void*x392; unsigned int x393/* : ? */; long x394; void*x395; oneway int x396; void*x397; void*x398; unsigned short x399; void*x400; void*x401; const int x402; in void*x403; long doublex404; void*x405; long x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; inout void*x426; bool x427; void*x428; bool x429; void*x430; int x431; long x432; double x433; oneway void*x434; const short x435; int x436; out in void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; unsigned long x452; void*x453; bycopy void*x454; void*x455; void*x456; void*x457; unsigned long x458; long doublex459; unsigned long x460; int x461; short x462; void*x463; void*x464; long x465; void*x466; void*x467; void*x468; in void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; unsigned short x483; unsigned short x484; void*x485; out const void*x486; void*x487; void*x488; void*x489; void*x490; int x491; in void*x492; void*x493; void*x494; in void*x495; const void*x496; void*x497; out const void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; long doublex523; void*x524; unsigned long x525; out BOOL x526; void*x527; long x528; unsigned short x529; void*x530; BOOL x531; const void*x532; void*x533; void*x534; in void*x535; const void*x536; void*x537; void*x538; in void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; long doublex563; void*x564; void*x565; void*x566; void*x567; void*x568; out void*x569; void*x570; void*x571; unsigned int x572; unsigned char x573; out in void*x574; const out long x575; long x576; void*x577; const void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; bool x588; void*x589; long doublex590; void*x591; int x592; void*x593; void*x594; void*x595; int x596; out in bool x597; void*x598; BOOL x599; void*x600; void*x601; const out void*x602; in double x603; void*x604; void*x605; const void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; double x635; void*x636; void*x637; void*x638; bycopy unsigned int x639/* : ? */; void*x640; void*x641; BOOL x642; void*x643; void*x644; out const void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; unsigned int x660; oneway int x661; void*x662; void*x663; void*x664; long x665; void*x666; void*x667; void*x668; in void*x669; unsigned long x670; void*x671; void*x672; out void*x673; void*x674; unsigned char x675; out in void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; SEL x698; void*x699; long doublex700; out void*x701; void*x702; int x703; in bycopy unsigned int x704/* : ? */; void*x705; void*x706; BOOL x707; void*x708; void*x709; void*x710; void*x711; const int x712; void*x713; void x714; void*x715; unsigned char x716; out void*x717; void*x718; long x719; void*x720; void*x721; void*x722; double x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; long doublex742; int x743; short x744; BOOL x745; out void x746; void*x747; const void*x748; void*x749; void*x750; in void*x751; void*x752; void*x753; const void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; unsigned short x768; long x769; void*x770; const void*x771; void*x772; void*x773; in void*x774; void*x775; void*x776; const void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; unsigned short x795; void*x796; unsigned int x797; void*x798; out in void*x799; unsigned char x800; out in void*x801; const out long x802; long x803; void*x804; const void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; short x821; void*x822; void*x823; const void*x824; in short x825; float x826; out const void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; out void*x848; out long doublex849; void*x850; BOOL x851; out const void*x852; void*x853; int x854; out in void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; BOOL x873; out const double x874; void*x875; void*x876; void*x877; BOOL x878; void*x879; void*x880; void*x881; const void*x882; void*x883; void*x884; void*x885; out const bycopy void*x886; void*x887; const void*x888; void*x889; int x890; out in unsigned int x891; in float x892; out void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; char *x903; void*x904; void*x905; inout void*x906; void*x907; unsigned int x908/* : ? */; void*x909; const void*x910; void*x911; double x912; unsigned long x913; int x914; void*x915; void*x916; void*x917; unsigned short x918; void*x919; void*x920; long x921; void*x922; bool x923; void*x924; void*x925; void*x926; out in void*x927; void*x928; void*x929; void*x930; void*x931; void*x932; void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; out void*x951; long x952; void*x953; void*x954; void*x955; int x956; long x957; int x958; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; char *x976; void*x977; unsigned short x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; unsigned int x985/* : ? */; long x986; void*x987; bool x988; long x989; out BOOL x990; void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; Class x1006; void*x1007; long doublex1008; void*x1009; void*x1010; void*x1011; long x1012; void*x1013; void*x1014; long doublex1015; void*x1016; void x1017; int x1018; BOOL x1019; void*x1020; void*x1021; const out void*x1022; void*x1023; const void*x1024; void*x1025; void*x1026; void*x1027; in void*x1028; void*x1029; void*x1030; const void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; unsigned short x1050; unsigned char x1051; void*x1052; void*x1053; int x1054; double x1055; void*x1056; const void*x1057; BOOL x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; short x1084; short x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; const void*x1091; void*x1092; double x1093; void*x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void* x1107[ /* ? */ ]; void*x1108; void*x1109; double x1110; int x1111; out void*x1112; void*x1113; void*x1114; void*x1115; const void*x1116; BOOL x1117; void*x1118; short x1119; void*x1120; void*x1121; short x1122; void*x1123; out in short x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; long doublex1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; const void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; void*x1159; void*x1160; void*x1161; void*x1162; }*tileGrid; /* unknown property attribute:  WTF::RefPtr<WebCore::LegacyTileGridTile> >}IIII}}{IntRect={IntPoint=ii}{IntSize=ii}}} */

+ (id)layerBeingPainted;

- (id)actionForKey:(id)arg1;
- (void)drawInContext:(struct CGContext { }*)arg1;
- (void)layoutSublayers;
- (unsigned int)paintCount;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setPaintCount:(unsigned int)arg1;
- (void)setTileGrid:(struct LegacyTileGrid { struct LegacyTileCache {} *x1; struct RetainPtr<CALayer> { void *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > >, WTF::IntPointHash, WTF::HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > >::KeyValuePairTraits, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > {} *x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; }*)arg1;
- (struct LegacyTileGrid { struct LegacyTileCache {} *x1; struct RetainPtr<CALayer> { void *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > >, WTF::IntPointHash, WTF::HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > >::KeyValuePairTraits, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > {} *x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; }*)tileGrid;

@end
