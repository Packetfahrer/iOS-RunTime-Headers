/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKPolylineOverlayPainter : VKOverlayPainter <VKPolylineObserver> {
    float  _alphaScale;
    float  _arrowAlphaScale;
    VKTimedAnimation * _arrowCrossFadeAnimation;
    VKTimedAnimation * _arrowFadeAnimation;
    struct vector<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> >, std::__1::allocator<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > > > { 
        struct unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > {} *__begin_; 
        struct unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > {} *__end_; 
        struct __compressed_pair<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > *, std::__1::allocator<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > > > { 
            struct unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer> > {} *__first_; 
        } __end_cap_; 
    }  _arrowLayers;
    struct unique_ptr<vk::RouteLineArrowManager, std::__1::default_delete<vk::RouteLineArrowManager> > { 
        struct __compressed_pair<vk::RouteLineArrowManager *, std::__1::default_delete<vk::RouteLineArrowManager> > { 
            struct RouteLineArrowManager {} *__first_; 
        } __ptr_; 
    }  _arrowManager;
    struct fast_shared_ptr<vk::RouteLineSection> { 
        struct _fast_shared_ptr_control {} *_control; 
    }  _automobileSection;
    struct TrafficMeshStyle { 
        int _style[4]; 
    }  _builtMeshStyle;
    struct shared_ptr<gss::StyleQuery> { 
        struct StyleQuery {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _carStyleQuery;
    float  _contentScale;
    float  _crossfadingDisplayStep;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    }  _debugLineRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::RenderItem> *, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
            struct FragmentedPool<ggl::RenderItem> {} *__first_; 
        } __ptr_; 
    }  _debugRenderItems;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    }  _debugRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::Debug::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::Shader::Setup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::Debug::Shader::Setup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::Shader::Setup> > > { 
            struct FragmentedPool<ggl::Debug::Shader::Setup> {} *__first_; 
        } __ptr_; 
    }  _debugShaderSetups;
    struct unique_ptr<ggl::FragmentedPool<ggl::Debug::BaseMesh>, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::BaseMesh> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::Debug::BaseMesh> *, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::BaseMesh> > > { 
            struct FragmentedPool<ggl::Debug::BaseMesh> {} *__first_; 
        } __ptr_; 
    }  _debugUnmatchedRouteLineMeshes;
    VKTimedAnimation * _fadeAnimation;
    BOOL  _forceRoutelineUpdate;
    struct { 
        double v[4][4]; 
    }  _matrix;
    struct unique_ptr<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor> > > { 
            struct TrafficLayer<ggl::PilledTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    }  _pilledTrafficLayer;
    struct unique_ptr<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor> > > { 
            struct TrafficManager<ggl::PilledTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    }  _pilledTrafficManager;
    VKTileKeyList * _previousKeysInView;
    NSSet * _previousTilesInView;
    double  _previousViewUnitsPerPoint;
    VKRouteLine * _routeLine;
    double  _routeLineHalfWidthRealisticScale;
    struct unique_ptr<vk::RouteLineLayer, std::__1::default_delete<vk::RouteLineLayer> > { 
        struct __compressed_pair<vk::RouteLineLayer *, std::__1::default_delete<vk::RouteLineLayer> > { 
            struct RouteLineLayer {} *__first_; 
        } __ptr_; 
    }  _routeLineLayer;
    struct unique_ptr<vk::RouteLineManager, std::__1::default_delete<vk::RouteLineManager> > { 
        struct __compressed_pair<vk::RouteLineManager *, std::__1::default_delete<vk::RouteLineManager> > { 
            struct RouteLineManager {} *__first_; 
        } __ptr_; 
    }  _routeLineManager;
    double  _routeLineWidthScaleRegular;
    VKPolylineOverlay * _routeOverlay;
    BOOL  _selected;
    struct unordered_set<GEOComposedRouteSection *, std::__1::hash<GEOComposedRouteSection *>, std::__1::equal_to<GEOComposedRouteSection *>, std::__1::allocator<GEOComposedRouteSection *> > { 
        struct __hash_table<GEOComposedRouteSection *, std::__1::hash<GEOComposedRouteSection *>, std::__1::equal_to<GEOComposedRouteSection *>, std::__1::allocator<GEOComposedRouteSection *> > { 
            struct unique_ptr<std::__1::__hash_node<GEOComposedRouteSection *, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<GEOComposedRouteSection *, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > > { 
                    struct __hash_node<GEOComposedRouteSection *, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> > { 
                            unsigned long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<GEOComposedRouteSection *, void *> *>, std::__1::allocator<std::__1::__hash_node<GEOComposedRouteSection *, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<GEOComposedRouteSection *, void *> *> { 
                    struct __hash_node<GEOComposedRouteSection *, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::hash<GEOComposedRouteSection *> > { 
                unsigned long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::equal_to<GEOComposedRouteSection *> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    }  _selectedSections;
    BOOL  _showArrows;
    BOOL  _showTraffic;
    double  _simplificationEpsilon;
    struct unique_ptr<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor> > > { 
            struct TrafficLayer<ggl::SolidTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    }  _solidTrafficLayer;
    struct unique_ptr<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor> > > { 
        struct __compressed_pair<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor> *, std::__1::default_delete<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor> > > { 
            struct TrafficManager<ggl::SolidTrafficRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    }  _solidTrafficManager;
    int  _stencilValue;
    int  _styleZ;
    unsigned int  _targetDisplayStep;
    struct FeatureAttributeSet { 
        struct vector<gss::FeatureAttributePair, std::__1::allocator<gss::FeatureAttributePair> > { 
            struct FeatureAttributePair {} *__begin_; 
            struct FeatureAttributePair {} *__end_; 
            struct __compressed_pair<gss::FeatureAttributePair *, std::__1::allocator<gss::FeatureAttributePair> > { 
                struct FeatureAttributePair {} *__first_; 
            } __end_cap_; 
        } _attributes; 
    }  _trafficAttributes;
    struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { 
        struct ConstantDataTyped<ggl::Tile::View> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _viewUniforms;
    BOOL  _wasInRealisticMode;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) VKPolylineOverlay *polyline;
@property (nonatomic, retain) VKPolylineOverlay *routeOverlay;
@property (nonatomic) BOOL selected;
@property (nonatomic) BOOL showTraffic;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_didReceiveMemoryWarning;
- (BOOL)_shouldShowTraffic;
- (void)_userDefaultsDidChange:(id)arg1;
- (float)automobileRouteLineWidthForCamera:(id)arg1 canvasSize:(struct CGSize { float x1; float x2; })arg2;
- (void)dealloc;
- (void)flushPools;
- (void)gglLayoutWithContext:(id)arg1 traveledStrokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; long x21; void*x22; bycopy void*x23; unsigned int x24/* : ? */; void*x25; void*x26; void*x27; void*x28; void*x29; BOOL x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void x44; void*x45; out void*x46; int x47; void*x48; double x49; void*x50; void*x51; void*x52; char *x53; void*x54; void*x55; void*x56; void*x57; void*x58; char *x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; struct x69; void*x70; void*x71; void*x72; void*x73; void*x74; in void*x75; short x76; void*x77; int x78; void*x79; void*x80; void*x81; in void*x82; void*x83; void*x84; double x85; void*x86; void*x87; void*x88; long x89; void*x90; out void*x91; in void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; }*)arg2 strokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; const void*x19; in void*x20; void*x21; void*x22; long x23; void*x24; bycopy void*x25; unsigned int x26/* : ? */; void*x27; void*x28; void*x29; void*x30; void*x31; BOOL x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void x46; void*x47; out void*x48; int x49; void*x50; double x51; void*x52; void*x53; void*x54; char *x55; void*x56; void*x57; void*x58; void*x59; void*x60; char *x61; void*x62; void*x63; void*x64; void*x65; void*x66; struct x67; void*x68; void*x69; void*x70; short x71; void*x72; void*x73; void*x74; const void*x75; void*x76; void*x77; BOOL x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; short x92; void*x93; void*x94; void*x95; void*x96; void*x97; in void*x98; out void*x99; double x100; void*x101; void*x102; void*x103; void*x104; void*x105; short x106; void*x107; void*x108; void*x109; double x110; void*x111; SEL x112; void*x113; SEL x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; SEL x122; void*x123; SEL x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; short x134; void*x135; void*x136; void*x137; void*x138; void*x139; void x140; void*x141; void*x142; void*x143; long x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; in void*x164; short x165; void*x166; int x167; void*x168; void*x169; void*x170; in void*x171; void*x172; void*x173; double x174; void*x175; void*x176; void*x177; long x178; void*x179; out void*x180; in void*x181; void*x182; void*x183; void*x184; void*x185; long x186; void*x187; out void*x188; in void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; short x196; void*x197; void*x198; void*x199; double x200; void*x201; SEL x202; void*x203; SEL x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; SEL x212; void*x213; SEL x214; void*x215; short x216; void*x217; void*x218; void*x219; void*x220; void*x221; const void*x222; void*x223; void*x224; double x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; const void*x233; void*x234; void*x235; void x236; void*x237; void*x238; void*x239; SEL x240; void*x241; SEL x242; void*x243; unsigned long x244; void*x245; void*x246; void*x247; unsigned int x248/* : ? */; void*x249; void*x250; void*x251; long x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; const void*x262; in void*x263; void*x264; void*x265; long x266; void*x267; bycopy void*x268; unsigned int x269/* : ? */; void*x270; void*x271; void*x272; void*x273; void*x274; BOOL x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void x289; void*x290; out void*x291; int x292; void*x293; double x294; void*x295; void*x296; void*x297; char *x298; void*x299; void*x300; void*x301; void*x302; void*x303; struct x304; void*x305; }*)arg3 traveledFillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; bycopy void*x19; unsigned int x20/* : ? */; void*x21; void*x22; void*x23; void*x24; void*x25; BOOL x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void x40; void*x41; out void*x42; int x43; void*x44; double x45; void*x46; void*x47; void*x48; char *x49; void*x50; void*x51; void*x52; void*x53; void*x54; char *x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; struct x69; void*x70; void*x71; void*x72; short x73; void*x74; void*x75; void*x76; const void*x77; void*x78; void*x79; BOOL x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; short x94; void*x95; void*x96; void*x97; void*x98; void*x99; in void*x100; out void*x101; double x102; void*x103; void*x104; void*x105; void*x106; void*x107; short x108; void*x109; void*x110; void*x111; double x112; void*x113; SEL x114; void*x115; SEL x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; SEL x124; void*x125; SEL x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; short x136; void*x137; void*x138; void*x139; void*x140; void*x141; void x142; void*x143; void*x144; void*x145; long x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; in void*x166; short x167; void*x168; int x169; void*x170; void*x171; void*x172; in void*x173; void*x174; void*x175; double x176; void*x177; void*x178; void*x179; long x180; void*x181; out void*x182; in void*x183; void*x184; void*x185; void*x186; void*x187; long x188; void*x189; out void*x190; in void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; short x198; void*x199; void*x200; void*x201; double x202; void*x203; SEL x204; void*x205; SEL x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; SEL x214; void*x215; SEL x216; void*x217; short x218; void*x219; void*x220; void*x221; void*x222; void*x223; const void*x224; void*x225; void*x226; double x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; const void*x235; void*x236; void*x237; void x238; void*x239; void*x240; void*x241; SEL x242; void*x243; SEL x244; void*x245; unsigned long x246; void*x247; void*x248; void*x249; unsigned int x250/* : ? */; void*x251; void*x252; void*x253; long x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; const void*x264; in void*x265; void*x266; void*x267; long x268; void*x269; bycopy void*x270; unsigned int x271/* : ? */; void*x272; void*x273; void*x274; void*x275; void*x276; BOOL x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void x291; void*x292; out void*x293; int x294; void*x295; double x296; void*x297; void*x298; void*x299; char *x300; void*x301; void*x302; void*x303; void*x304; void*x305; struct x306; void*x307; }*)arg4 fillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; char *x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; in void*x35; short x36; void*x37; int x38; void*x39; void*x40; void*x41; in void*x42; void*x43; void*x44; double x45; void*x46; void*x47; void*x48; long x49; void*x50; out void*x51; in void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void x69; void*x70; out void*x71; int x72; void*x73; double x74; void*x75; char *x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void x90; void*x91; out void*x92; int x93; void*x94; double x95; void*x96; char *x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void x111; void*x112; out void*x113; int x114; void*x115; double x116; void*x117; char *x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; in void*x134; short x135; void*x136; int x137; void*x138; void*x139; void*x140; in void*x141; void*x142; void*x143; double x144; void*x145; void*x146; void*x147; int x148; void*x149; in void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; char *x165; void*x166; void*x167; void*x168; SEL x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; char *x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void x185; void*x186; out void*x187; int x188; void*x189; double x190; void*x191; char *x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void x206; void*x207; out void*x208; int x209; void*x210; double x211; void*x212; char *x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void x227; void*x228; out void*x229; int x230; void*x231; double x232; void*x233; char *x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; long x248; void*x249; out void*x250; in void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void x268; void*x269; out void*x270; int x271; void*x272; double x273; void*x274; char *x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void x289; void*x290; out void*x291; int x292; void*x293; double x294; void*x295; char *x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void x310; void*x311; out void*x312; int x313; void*x314; double x315; void*x316; char *x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void x331; void*x332; out void*x333; int x334; void*x335; double x336; void*x337; char *x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void x352; void*x353; out void*x354; int x355; void*x356; double x357; void*x358; char *x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void x373; void*x374; out void*x375; int x376; void*x377; double x378; void*x379; char *x380; void*x381; short x382; void*x383; void*x384; void*x385; const void*x386; void*x387; void*x388; BOOL x389; void*x390; void*x391; void*x392; void*x393; void*x394; double x395; void*x396; void*x397; void*x398; long long x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; out void*x411; SEL x412; void*x413; SEL x414; void*x415; float x416; void*x417; void*x418; void*x419; short x420; void*x421; void*x422; void*x423; void*x424; void*x425; short x426; void*x427; void*x428; void*x429; void*x430; void*x431; const void*x432; void*x433; void*x434; double x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; const void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; long x450; void*x451; SEL x452; void*x453; SEL x454; void*x455; unsigned long long x456; void*x457; void*x458; void*x459; void*x460; void*x461; const void*x462; void*x463; void*x464; unsigned int x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; short x479; void*x480; void*x481; void*x482; double x483; void*x484; SEL x485; void*x486; SEL x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; SEL x495; void*x496; SEL x497; void*x498; void*x499; void*x500; long x501; void*x502; long x503; void*x504; out void*x505; BOOL x506; void*x507; void*x508; void*x509; void*x510; void*x511; out void*x512; const void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; out void*x520; SEL x521; void*x522; SEL x523; void*x524; float x525; void*x526; void*x527; void*x528; short x529; void*x530; void*x531; void*x532; void*x533; void*x534; short x535; void*x536; void*x537; void*x538; void*x539; void*x540; const void*x541; void*x542; void*x543; double x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; const void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; long x559; void*x560; SEL x561; void*x562; SEL x563; void*x564; unsigned long long x565; void*x566; void*x567; void*x568; void*x569; void*x570; const void*x571; void*x572; void*x573; unsigned int x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; struct x594; void*x595; void*x596; void*x597; short x598; void*x599; void*x600; void*x601; const void*x602; void*x603; void*x604; BOOL x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; short x615; void*x616; void*x617; void*x618; long x619; void*x620; int x621; void*x622; void*x623; void*x624; void*x625; void*x626; unsigned int x627/* : ? */; void*x628; void*x629; void*x630; float x631; void*x632; float x633; void*x634; void*x635; void*x636; const void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; out void*x644; SEL x645; void*x646; SEL x647; void*x648; float x649; void*x650; void*x651; void*x652; short x653; void*x654; void*x655; void*x656; void*x657; void*x658; short x659; void*x660; void*x661; void*x662; void*x663; void*x664; const void*x665; void*x666; void*x667; double x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; const void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; long x683; void*x684; SEL x685; void*x686; SEL x687; void*x688; unsigned long long x689; void*x690; void*x691; void*x692; void*x693; void*x694; const void*x695; void*x696; void*x697; unsigned int x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; char *x710; void*x711; void*x712; void*x713; void*x714; void*x715; short x716; void*x717; void*x718; void*x719; double x720; void*x721; SEL x722; void*x723; SEL x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; SEL x732; void*x733; SEL x734; void*x735; void*x736; void*x737; long x738; void*x739; long x740; void*x741; out void*x742; BOOL x743; void*x744; void*x745; void*x746; void*x747; void*x748; out void*x749; const void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; out void*x757; SEL x758; void*x759; SEL x760; void*x761; float x762; void*x763; void*x764; void*x765; short x766; void*x767; void*x768; void*x769; void*x770; void*x771; short x772; void*x773; void*x774; void*x775; void*x776; void*x777; const void*x778; void*x779; void*x780; double x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; const void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; long x796; void*x797; SEL x798; void*x799; SEL x800; void*x801; unsigned long long x802; void*x803; void*x804; void*x805; void*x806; void*x807; const void*x808; void*x809; void*x810; unsigned int x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; char *x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; struct x833; void*x834; void*x835; void*x836; short x837; void*x838; void*x839; void*x840; const void*x841; void*x842; void*x843; BOOL x844; void*x845; void*x846; void*x847; void*x848; void*x849; float x850; void*x851; void*x852; void*x853; short x854; void*x855; void*x856; void*x857; void*x858; void*x859; short x860; void*x861; void*x862; void*x863; void*x864; void*x865; const void*x866; void*x867; void*x868; double x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; void*x876; const void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; long x884; void*x885; SEL x886; void*x887; SEL x888; void*x889; unsigned long long x890; void*x891; void*x892; void*x893; void*x894; void*x895; const void*x896; void*x897; void*x898; unsigned int x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; struct x911; void*x912; }*)arg5 tiles:(id)arg6;
- (void)gglLayoutWithContext:(id)arg1 traveledStrokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; double x19; void*x20; int x21; void*x22; in void*x23; void*x24; void*x25; unsigned long long x26; void*x27; void*x28; void*x29; void*x30; void*x31; const void*x32; void*x33; void*x34; void*x35; void*x36; char *x37; void*x38; void*x39; void*x40; void*x41; void*x42; short x43; void*x44; void*x45; void*x46; double x47; void*x48; SEL x49; void*x50; SEL x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; SEL x59; void*x60; SEL x61; void*x62; void*x63; void*x64; long x65; void*x66; long x67; void*x68; out void*x69; BOOL x70; void*x71; void*x72; void*x73; void*x74; void*x75; out void*x76; const void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; long x84; void*x85; SEL x86; void*x87; SEL x88; void*x89; void*x90; void*x91; void*x92; void*x93; in void*x94; double x95; void*x96; int x97; void*x98; in void*x99; void*x100; void*x101; unsigned long long x102; void*x103; void*x104; void*x105; void*x106; void*x107; const void*x108; void*x109; void*x110; void*x111; void*x112; char *x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; struct x123; void*x124; void*x125; void*x126; short x127; void*x128; void*x129; void*x130; const void*x131; void*x132; void*x133; BOOL x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; in void*x144; double x145; void*x146; int x147; void*x148; in void*x149; void*x150; void*x151; unsigned long long x152; void*x153; void*x154; void*x155; void*x156; void*x157; const void*x158; void*x159; void*x160; void*x161; void*x162; struct x163; void*x164; }*)arg2 strokeCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; out BOOL x19; void*x20; void*x21; out const void*x22; void*x23; void*x24; out SEL x25; SEL x26; float x27; void*x28; short x29; void*x30; void*x31; short x32; void*x33; void*x34; const void*x35; double x36; void*x37; void*x38; void*x39; const void*x40; void*x41; void*x42; long x43; SEL x44; SEL x45; unsigned long long x46; void*x47; void*x48; const void*x49; unsigned int x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; struct  unsigned long x_3_2_1;  {} x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; }*)arg3 traveledFillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; out BOOL x19; void*x20; void*x21; out const void*x22; void*x23; void*x24; out SEL x25; SEL x26; float x27; void*x28; short x29; void*x30; void*x31; short x32; void*x33; void*x34; const void*x35; double x36; void*x37; void*x38; void*x39; const void*x40; void*x41; void*x42; long x43; SEL x44; SEL x45; unsigned long long x46; void*x47; void*x48; const void*x49; unsigned int x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; struct  unsigned long x_3_2_1;  {} x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; }*)arg4 fillCommandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; out BOOL x19; void*x20; void*x21; out const void*x22; void*x23; void*x24; out SEL x25; SEL x26; float x27; void*x28; short x29; void*x30; void*x31; short x32; void*x33; void*x34; const void*x35; double x36; void*x37; void*x38; void*x39; const void*x40; void*x41; void*x42; long x43; SEL x44; SEL x45; unsigned long long x46; void*x47; void*x48; const void*x49; unsigned int x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; struct  unsigned long x_3_2_1;  {} x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; }*)arg5 tiles:(id)arg6 layer:(unsigned char)arg7;
- (id)initWithOverlay:(id)arg1;
- (void)layoutDebugUnmatchedRouteLine:(id)arg1 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned int x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; double x20; void*x21; long x22; out in void*x23; void*x24; void*x25; short x26; void*x27; double x28; SEL x29; SEL x30; void*x31; void*x32; void*x33; SEL x34; SEL x35; void*x36; long x37; long x38; out BOOL x39; void*x40; void*x41; out const void*x42; void*x43; void*x44; out SEL x45; SEL x46; float x47; void*x48; short x49; void*x50; void*x51; short x52; void*x53; void*x54; const void*x55; double x56; void*x57; void*x58; void*x59; const void*x60; void*x61; void*x62; long x63; SEL x64; SEL x65; unsigned long long x66; void*x67; void*x68; const void*x69; unsigned int x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; struct  unsigned long x_3_2_1;  {} x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; }*)arg2;
- (void)layoutWithContext:(id)arg1 tiles:(id)arg2 keysInView:(id)arg3;
- (id)polyline;
- (void)polyline:(id)arg1 selectedSections:(id)arg2 deselectedSections:(id)arg3;
- (void)prepareDebugLines;
- (void)prepareToDrawWithCanvas:(id)arg1;
- (id)routeOverlay;
- (BOOL)selected;
- (void)setContainerModel:(id)arg1;
- (void)setNeedsLayoutForPolyline:(id)arg1;
- (void)setRouteOverlay:(id)arg1;
- (void)setSelected:(BOOL)arg1;
- (void)setShowTraffic:(BOOL)arg1;
- (BOOL)showTraffic;
- (struct shared_ptr<gss::StyleManager> { struct StyleManager {} *x1; struct __shared_weak_count {} *x2; })styleManager;
- (void)stylesheetDidChange;
- (void)updateRouteLineStencilValue:(int)arg1;

@end
