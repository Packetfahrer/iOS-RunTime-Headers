/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

@interface CPTableCell : CPChunk <CPDisposable> {
    struct CGColor { } * backgroundColor;
    unsigned int  backgroundGraphicCount;
    id * backgroundGraphics;
    struct { struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_1_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_1_1_2; } x1; struct CGColor {} *x2; unsigned int x3; id *x4; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; SEL x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; long x20; int x21; short x22; void*x23; void*x24; const out BOOL x25; void*x26; short x27; short x28; out const void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; long x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; SEL x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; unsigned short x80; void*x81; short x82; void*x83; void*x84; void*x85; void*x86; unsigned long x87; int x88; unsigned int x89/* : ? */; const void*x90; const void*x91; void*x92; void*x93; const void*x94; void*x95; void*x96; void*x97; out const void*x98; short x99; void*x100; void*x101; void*x102; out void*x103; out short x104; void*x105; unsigned int x106; void*x107; float x108; const void*x109; void*x110; void*x111; void*x112; out const void*x113; void*x114; void*x115; void*x116; out void*x117; out short x118; void*x119; unsigned int x120; void*x121; void*x122; void*x123; void*x124; void*x125; void* x126[ /* ? */ ]; void*x127; unsigned short x128; void*x129; short x130; void*x131; void*x132; void*x133; void*x134; unsigned long x135; int x136; unsigned int x137/* : ? */; const void*x138; const void*x139; void*x140; void*x141; const int x142; void x143; void*x144; void*x145; void*x146; void*x147; const void*x148; void*x149; void*x150; void*x151; out const void*x152; short x153; void*x154; unsigned short x155; void*x156; unsigned int x157/* : ? */; void*x158; void*x159; BOOL x160; void*x161; short x162; void*x163; float x164; const void*x165; void*x166; void*x167; void*x168; out const void*x169; void*x170; unsigned short x171; void*x172; unsigned int x173/* : ? */; void*x174; void*x175; BOOL x176; void*x177; short x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; short x193; void*x194; void*x195; void*x196; unsigned short x197; void*x198; short x199; void*x200; void*x201; void*x202; void*x203; unsigned long x204; int x205; unsigned int x206/* : ? */; const void*x207; const void*x208; void*x209; void*x210; const void*x211; void*x212; void*x213; void*x214; out const void*x215; short x216; void*x217; void*x218; void*x219; unsigned int x220/* : ? */; void*x221; int x222; void*x223; void*x224; float x225; const void*x226; void*x227; void*x228; void*x229; out const void*x230; void*x231; void*x232; void*x233; unsigned int x234/* : ? */; void*x235; int x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; SEL x246; void*x247; void*x248; void*x249; void*x250; char *x251; long doublex252; unsigned int x253; in void*x254; void*x255; const short x256; void*x257; int x258; void*x259; int x260; void*x261; long x262; double x263; void*x264; const void*x265; short x266; void*x267; in void*x268; void*x269; void*x270; int x271; out in oneway int x272; void*x273; void*x274; unsigned char x275; out in void*x276; const out long x277; long x278; void*x279; const void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; short x299; void*x300; void*x301; unsigned long x302; unsigned int x303; in void*x304; long x305; int x306; void*x307; void*x308; void*x309; short x310; short x311; void*x312; void*x313; short x314; long x315; unsigned int x316/* : ? */; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; oneway void*x326; void*x327; void*x328; void*x329; void*x330; unsigned char x331; void*x332; long x333; void*x334; in double x335; void*x336; const unsigned char x337; out void*x338; void*x339; out short x340; void*x341; void*x342; void*x343; BOOL x344; int x345; void*x346; int x347; void*x348; in void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; bool x373; unsigned short x374; unsigned char x375; void*x376; void*x377; void*x378; void*x379; out const void*x380; unsigned long x381; out void*x382; void*x383; void*x384; const void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; unsigned int x401; void*x402; bool x403; void*x404; void*x405; void*x406; long doublex407; int x408; short x409; void*x410; long x411; void*x412; void*x413; unsigned char x414; out in void*x415; void*x416; in void*x417; short x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; long x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; in int x433; void*x434; short x435; unsigned short x436; void*x437; void*x438; void*x439; out in unsigned short x440; void*x441; BOOL x442; BOOL x443; void*x444; double x445; void*x446; double x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; unsigned short x473; unsigned char x474; unsigned long x475; oneway int x476; double x477; void*x478; out void*x479; void*x480; void*x481; BOOL x482; void*x483; void*x484; void*x485; in void*x486; void*x487; const void*x488; void x489; int x490; void*x491; void*x492; oneway int x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; Class x509; void*x510; void*x511; void*x512; void*x513; void*x514; unsigned short x515; bool x516; void*x517; const bool x518; void*x519; void*x520; void*x521; out in unsigned short x522; void*x523; int x524; in in void*x525; const oneway int x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; } * borders;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    }  cellBounds;
    struct { 
        int location; 
        int length; 
    }  columnSpan;
    struct { 
        int location; 
        int length; 
    }  rowSpan;
}

@property (nonatomic, readonly) unsigned int backgroundGraphicCount;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } cellBounds;
@property (nonatomic) struct { int x1; int x2; } columnSpan;
@property (nonatomic) struct { int x1; int x2; } rowSpan;

- (struct CGColor { }*)backgroundColor;
- (id)backgroundGraphicAtIndex:(unsigned int)arg1;
- (unsigned int)backgroundGraphicCount;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boundsOfBorder:(int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })cellBounds;
- (struct CGColor { }*)colorOfBorder:(int)arg1;
- (struct { int x1; int x2; })columnSpan;
- (int)compareCellOrdinal:(id)arg1;
- (void)dealloc;
- (void)dispose;
- (void)finalize;
- (unsigned int)graphicCountOfBorder:(int)arg1;
- (id)graphicObjectOfBorder:(int)arg1 atIndex:(unsigned int)arg2;
- (id)initWithBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct { int x1; int x2; })rowSpan;
- (void)setBackgroundGraphics:(id)arg1;
- (void)setBorder:(int)arg1 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 graphics:(id)arg3;
- (void)setColumnSpan:(struct { int x1; int x2; })arg1;
- (void)setRowSpan:(struct { int x1; int x2; })arg1;

@end
