/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon
 */

@interface BirthdayCalendarUpdater : NSOperation {
    NSMutableDictionary * _accountIdentifiersToIsFacebook;
    ACAccountStore * _accountStore;
    void * _addressBook;
    NSString * _birthdaySummary;
    NSString * _birthdaySummaryFormatWithName;
    void * _calendar;
    struct CalDatabase { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; struct __CFDictionary {} *x6; struct __CFDictionary {} *x7; struct _opaque_pthread_mutex_t { long x_8_1_1; BOOL x_8_1_2[40]; } x8; unsigned int x9; unsigned int x10; struct __CFArray {} *x11; struct __CFString {} *x12; struct __CFArray {} *x13; int x14; int x15; struct __CFString {} *x16; struct __CFString {} *x17; int x18; id /* block */ x19; struct _opaque_pthread_mutex_t { long x_20_1_1; BOOL x_20_1_2[40]; } x20; bool x21; struct __CFArray {} *x22; struct __CFArray {} *x23; id x24; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; SEL x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; unsigned short x76; void*x77; short x78; void*x79; void*x80; void*x81; void*x82; unsigned long x83; int x84; unsigned int x85/* : ? */; const void*x86; const void*x87; void*x88; void*x89; const int x90; void x91; void*x92; void*x93; void*x94; void*x95; const void*x96; void*x97; void*x98; void*x99; out const void*x100; short x101; void*x102; BOOL x103; BOOL x104; void*x105; short x106; short x107; int x108; unsigned int x109/* : ? */; int x110; long x111; int x112; void*x113; void*x114; void*x115; void*x116; int x117; long x118; int x119; void*x120; int x121; void*x122; short x123; void*x124; float x125; const void*x126; void*x127; void*x128; void*x129; out const void*x130; void*x131; BOOL x132; BOOL x133; void*x134; short x135; short x136; int x137; unsigned int x138/* : ? */; int x139; long x140; int x141; void*x142; void*x143; void*x144; void*x145; int x146; long x147; int x148; void*x149; int x150; void*x151; short x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; SEL x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; bool x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; SEL x234; void*x235; void*x236; void*x237; void*x238; unsigned char x239; void*x240; unsigned short x241; void*x242; short x243; void*x244; void*x245; void*x246; void*x247; unsigned long x248; int x249; unsigned int x250/* : ? */; const void*x251; const void*x252; void*x253; void*x254; const int x255; void x256; void*x257; void*x258; void*x259; void*x260; const void*x261; void*x262; void*x263; void*x264; out const void*x265; short x266; void*x267; int x268; double x269; unsigned short x270; void*x271; const void x272; int x273; BOOL x274; void*x275; short x276; void*x277; float x278; const void*x279; void*x280; void*x281; void*x282; out const void*x283; void*x284; int x285; double x286; unsigned short x287; void*x288; const void x289; int x290; BOOL x291; void*x292; short x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; SEL x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; SEL x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; unsigned int x463/* : ? */; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; SEL x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; SEL x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; SEL x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; SEL x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; unsigned int x607/* : ? */; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; SEL x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; unsigned short x628; void*x629; short x630; void*x631; void*x632; void*x633; void*x634; unsigned long x635; int x636; unsigned int x637/* : ? */; const void*x638; const void*x639; void*x640; void*x641; const int x642; void x643; void*x644; void*x645; void*x646; void*x647; const void*x648; void*x649; void*x650; void*x651; out const void*x652; short x653; void*x654; unsigned char x655; void*x656; void*x657; void*x658; const void*x659; void*x660; unsigned int x661; void*x662; float x663; const void*x664; void*x665; void*x666; void*x667; out const void*x668; void*x669; unsigned char x670; void*x671; void*x672; void*x673; const void*x674; void*x675; unsigned int x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; int x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; SEL x738; void*x739; void*x740; void*x741; void*x742; void*x743; long doublex744; long doublex745; void*x746; void*x747; short x748; void*x749; long x750; void*x751; void*x752; const void*x753; BOOL x754; void*x755; void*x756; const void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; SEL x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; unsigned int x802/* : ? */; struct x803; void*x804; void*x805; void*x806; void*x807; in void*x808; void*x809; long long x810; void*x811; void*x812; } * _database;
    long  _defaultAlarmOffset;
    void * _facebookCalendar;
}

- (void).cxx_destruct;
- (BOOL)_areNormalizedBirthdaysTheSame:(id)arg1 birthday2:(id)arg2;
- (id)_birthdayCalendarForCalendarScale:(id)arg1;
- (id)_birthdayCalendarForCalendarScale:(id)arg1 useCurrentTimezone:(BOOL)arg2;
- (BOOL)_isPersonFromFacebook:(void*)arg1;
- (BOOL)_isYearlessBirthday:(id)arg1;
- (int)_processPerson:(void*)arg1 withBirthdays:(id)arg2 forCalendar:(void*)arg3 preExistingEvents:(id)arg4 addedBirthdayRecord:(id)arg5;
- (int)_pruneEventsFromCalendar:(void*)arg1 matchingFacebookStatus:(BOOL)arg2 andStoreInRecord:(id)arg3;
- (void)addDefaultAlarmToEvent:(void*)arg1;
- (id)copyBirthdayEventSummaryForPerson:(void*)arg1;
- (id)copyNormalizedBirthdaysForPerson:(void*)arg1;
- (id)copyOldestNormalizedBirthdaysForPerson:(void*)arg1;
- (void)dealloc;
- (id)init;
- (void)main;
- (void*)newBirthdayEventForBirthday:(id)arg1 andPerson:(void*)arg2;
- (void)setBirthday:(id)arg1 forEvent:(void*)arg2;

@end
